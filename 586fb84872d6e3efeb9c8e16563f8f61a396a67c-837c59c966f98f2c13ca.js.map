{"version":3,"file":"586fb84872d6e3efeb9c8e16563f8f61a396a67c-837c59c966f98f2c13ca.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/utils/columnSizeMatcher.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/utils/getReadableColor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Category.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Title.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Excerpt.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/AvatarSimple/AvatarSimple.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Author.Avatar.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Author.Name.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Info.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.Icon.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.Image.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Base.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/MemphisPattern/MemphisPattern.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/TextList/TextList.jsx"],"sourcesContent":["//Responsive flex sizes based on theme-ui sizes (theme.sizes)\r\nexport default columns => {\r\n  if (!Array.isArray(columns) || columns.length <= 0) return\r\n\r\n  let columnSizes\r\n\r\n  const sizes = {\r\n    1: `full`,\r\n    2: `1/2`,\r\n    3: `1/3`,\r\n    4: `1/4`,\r\n    5: `1/5`\r\n  }\r\n  columnSizes = {\r\n    flexBasis: [\r\n      sizes[columns[0]],\r\n      sizes[columns[1]],\r\n      sizes[columns[2]],\r\n      sizes[columns[3]]\r\n    ]\r\n  }\r\n\r\n  return columnSizes\r\n}\r\n","const getReadableColor = hex => {\r\n  if (hex.indexOf('#') === 0) {\r\n    hex = hex.slice(1)\r\n  }\r\n  // convert 3-digit hex to 6-digits.\r\n  if (hex.length === 3) {\r\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\r\n  }\r\n  if (hex.length !== 6) {\r\n    console.log('Invalid HEX color.')\r\n    return\r\n  }\r\n  var r = parseInt(hex.slice(0, 2), 16),\r\n    g = parseInt(hex.slice(2, 4), 16),\r\n    b = parseInt(hex.slice(4, 6), 16)\r\n\r\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? '#2d3748' : '#FFFFFF'\r\n}\r\n\r\nexport default getReadableColor\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Box, Badge, css } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport getReadableColor from '@components/utils/getReadableColor'\r\n\r\nconst styles = {\r\n  badge: {\r\n    mb: 3\r\n  }\r\n}\r\n\r\nconst CardBodyCategory = ({ variant, category, omitCategory }) =>\r\n  !omitCategory && category && category.slug ? (\r\n    <Box css={css(styles.badge)} sx={{ variant: rv(variant, 'category') }}>\r\n      <Badge\r\n        variant='tag'\r\n        as={Link}\r\n        to={category.slug}\r\n        sx={\r\n          category.color && {\r\n            bg: category.color,\r\n            color: getReadableColor(category.color)\r\n          }\r\n        }\r\n      >\r\n        {category.name}\r\n      </Badge>\r\n    </Box>\r\n  ) : null\r\n\r\nexport default CardBodyCategory\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Heading } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst CardBodyTitle = ({ variant, title, slug, link }) => {\r\n  const linkProps = link\r\n    ? {\r\n        as: 'a',\r\n        href: link,\r\n        target: '_blank',\r\n        rel: 'noopener noreferrer'\r\n      }\r\n    : {\r\n        as: GLink,\r\n        to: slug\r\n      }\r\n  return (\r\n    <Heading {...linkProps} sx={{ variant: rv(variant, 'title') }}>\r\n      {title}\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default CardBodyTitle\r\n","import React from 'react'\r\nimport { Text, useThemeUI, get } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst styles = {\r\n  excerpt: {\r\n    flex: `auto`,\r\n    mb: 3\r\n  }\r\n}\r\n\r\nconst CardBodyExcerpt = ({ variant, excerpt, omitExcerpt }) => {\r\n  const context = useThemeUI()\r\n\r\n  const responsiveVariant = rv(variant, 'excerpt')\r\n\r\n  const visibility = responsiveVariant.reduce(\r\n    (mobileVisibility, variant) =>\r\n      mobileVisibility === false &&\r\n      get(context.theme, variant, {}).display === 'none'\r\n        ? false\r\n        : true,\r\n    false\r\n  )\r\n\r\n  return !omitExcerpt && visibility ? (\r\n    <Text\r\n      variant='small'\r\n      sx={{\r\n        ...styles.excerpt,\r\n        variant: responsiveVariant\r\n      }}\r\n    >\r\n      {excerpt}\r\n    </Text>\r\n  ) : null\r\n}\r\n\r\nexport default CardBodyExcerpt\r\n","import React from 'react'\r\nimport { Box } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport CardBodyCategory from './Card.Body.Category'\r\nimport CardBodyTitle from './Card.Body.Title'\r\nimport CardBodyExcerpt from './Card.Body.Excerpt'\r\n\r\nconst styles = {\r\n  body: {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    justifyContent: `center`,\r\n    flex: 1\r\n  }\r\n}\r\n\r\nconst CardBody = ({ children, omitBody, ...props }) =>\r\n  !omitBody && (\r\n    <Box\r\n      sx={{\r\n        ...styles.body,\r\n        variant: rv(props.variant, 'body')\r\n      }}\r\n    >\r\n      <CardBodyCategory {...props} />\r\n      <CardBodyTitle {...props} />\r\n      <CardBodyExcerpt {...props} />\r\n      {children}\r\n    </Box>\r\n  )\r\n\r\nexport default CardBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GatsbyImage as Img } from 'gatsby-plugin-image'\r\nimport { Box } from 'theme-ui'\r\nimport getImageVariant from '@components/utils/getImageVariant'\r\n\r\nconst styles = {\r\n  imageWrapperSimple: {\r\n    bg: `omegaLight`,\r\n    display: `inline-block`,\r\n    verticalAlign: `middle`,\r\n    borderRadius: `full`,\r\n    borderStyle: `solid`,\r\n    borderWidth: `md`,\r\n    borderColor: `omegaLight`,\r\n    overFlow: `hidden`,\r\n    opacity: 0.9,\r\n    mr: 3,\r\n    img: {\r\n      borderRadius: `full`\r\n    },\r\n    ':hover': {\r\n      opacity: 1\r\n    },\r\n    '> div': {\r\n      borderRadius: `full`\r\n    }\r\n  }\r\n}\r\n\r\nconst AvatarSimple = ({ avatar, size, alt }) => {\r\n  const image = avatar && getImageVariant(avatar, size)\r\n\r\n  if (!image) return null\r\n\r\n  return (\r\n    <Box sx={styles.imageWrapperSimple}>\r\n      <Img image={image} alt={alt} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AvatarSimple\r\n\r\nAvatarSimple.defaultProps = {\r\n  size: 'regular'\r\n}\r\n\r\nAvatarSimple.propTypes = {\r\n  size: PropTypes.oneOf([false, 'small', 'regular']),\r\n  loading: PropTypes.string,\r\n  alt: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Link, useThemeUI, get } from 'theme-ui'\r\nimport AvatarSimple from '@components/AvatarSimple'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst CardFooterAuthorAvatar = ({ variant, omitAuthor, author }) => {\r\n  const context = useThemeUI()\r\n\r\n  if (omitAuthor) return null\r\n\r\n  const responsiveVariant = rv(variant, 'authorPhoto')\r\n\r\n  const visibility = responsiveVariant.reduce(\r\n    (mobileVisibility, variant) =>\r\n      mobileVisibility === false &&\r\n      get(context.theme, variant, {}).display === 'none'\r\n        ? false\r\n        : true,\r\n    false\r\n  )\r\n\r\n  return visibility ? (\r\n    author && author.thumbnail ? (\r\n      <Link\r\n        as={GLink}\r\n        to={author.slug}\r\n        aria-label={author.name}\r\n        sx={{ variant: responsiveVariant }}\r\n      >\r\n        <AvatarSimple\r\n          avatar={author.thumbnail}\r\n          alt={author.name}\r\n          size='small'\r\n        />\r\n      </Link>\r\n    ) : null\r\n  ) : null\r\n}\r\nexport default CardFooterAuthorAvatar\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Text, Link } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst styles = {\r\n  author: {\r\n    pr: 2\r\n  }\r\n}\r\n\r\nconst CardFooterAuthorName = ({ variant, omitAuthor, author }) =>\r\n  !omitAuthor && author && author.slug ? (\r\n    <Text sx={{ ...styles.author, variant: rv(variant, 'author') }}>\r\n      <Link variant='mute' as={GLink} to={author.slug}>\r\n        <strong>{author.name}</strong>\r\n      </Link>\r\n    </Text>\r\n  ) : null\r\n\r\nexport default CardFooterAuthorName\r\n","import React from 'react'\r\nimport { Text } from 'theme-ui'\r\nimport TextList from '@components/TextList'\r\nimport { FaRegClock } from 'react-icons/fa'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst CardFooterInfo = ({ variant, date, timeToRead }) => (\r\n  <TextList nowrap>\r\n    {date && <Text sx={{ variant: rv(variant, 'date') }}>{date}</Text>}\r\n    {timeToRead && (\r\n      <Text sx={{ variant: rv(variant, 'timeToRead') }}>\r\n        <FaRegClock css={{ verticalAlign: `middle` }} /> {timeToRead} min\r\n      </Text>\r\n    )}\r\n  </TextList>\r\n)\r\n\r\nexport default CardFooterInfo\r\n","import React from 'react'\r\nimport { Flex } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport AuthorAvatar from './Card.Footer.Author.Avatar'\r\nimport AuthorName from './Card.Footer.Author.Name'\r\nimport Info from './Card.Footer.Info'\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    alignItems: `center`\r\n  },\r\n  postInfo: {\r\n    flex: 1,\r\n    flexWrap: `wrap`,\r\n    justifyContent: `space-between`,\r\n    color: `omega`\r\n  }\r\n}\r\n\r\nconst CardFooter = ({ omitFooter, ...props }) =>\r\n  !omitFooter && (\r\n    <Flex css={styles.wrapper} sx={{ variant: rv(props.variant, 'footer') }}>\r\n      <AuthorAvatar {...props} />\r\n      <Flex sx={styles.postInfo}>\r\n        <AuthorName {...props} />\r\n        <Info {...props} />\r\n      </Flex>\r\n    </Flex>\r\n  )\r\nexport default CardFooter\r\n","import React from 'react'\r\nimport SVG from 'react-inlinesvg'\r\nimport { Flex, Box, Text, css } from 'theme-ui'\r\nimport MemphisPattern from '@components/MemphisPattern'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport getReadableColor from '@components/utils/getReadableColor'\r\n\r\nconst styles = {\r\n  iconBox: {\r\n    height: `full`\r\n  },\r\n  iconAndText: {\r\n    flexDirection: `column`,\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    // color: `omegaDark`,\r\n    position: `relative`,\r\n    fontWeight: `medium`,\r\n    height: `full`,\r\n    zIndex: 2,\r\n    px: 2,\r\n    lineHeight: 1.33,\r\n    svg: {\r\n      pb: 2\r\n    }\r\n  },\r\n  pattern: {\r\n    opacity: 0.07,\r\n    borderRadius: `default`\r\n  }\r\n}\r\n\r\nconst CardMediaIcon = ({ variant, thumbnailText, category }) =>\r\n  category && category.icon && category.name ? (\r\n    <Box\r\n      bg={category.color || 'omegaDark'}\r\n      color={category.color ? getReadableColor(category.color) : '#fff'}\r\n      sx={{\r\n        ...styles.iconBox,\r\n        variant: rv(variant, 'iconBox')\r\n      }}\r\n    >\r\n      <Flex sx={styles.iconAndText}>\r\n        <SVG src={category.icon} css={css({ variant: rv(variant, 'icon') })} />\r\n        <Text sx={{ variant: rv(variant, 'iconText') }}>\r\n          {thumbnailText || category.name}\r\n        </Text>\r\n      </Flex>\r\n      <MemphisPattern sx={styles.pattern} />\r\n    </Box>\r\n  ) : null\r\n\r\nexport default CardMediaIcon\r\n","import React from 'react'\r\nimport { GatsbyImage as Img } from 'gatsby-plugin-image'\r\nimport { css } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst CardMediaImage = ({ variant, loading, image, title }) => (\r\n  <Img\r\n    image={image}\r\n    loading={loading}\r\n    alt={title}\r\n    css={css({\r\n      height: `full`,\r\n      verticalAlign: `middle`, //avoid baseline gap\r\n      img: {\r\n        bg: `omegaLighter`\r\n      },\r\n      variant: rv(variant, 'image')\r\n    })}\r\n  />\r\n)\r\nCardMediaImage.defaultProps = {\r\n  loading: 'lazy'\r\n}\r\n\r\nexport default CardMediaImage\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Link, useThemeUI, get } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport getImageVariant from '@components/utils/getImageVariant'\r\nimport CardMediaIcon from './Card.Media.Icon'\r\nimport CardMediaImage from './Card.Media.Image'\r\n\r\nconst DEFAULT_IMAGE_VARIANT = 'vertical'\r\n\r\nconst styles = {\r\n  link: {\r\n    userSelect: `none`,\r\n    textAlign: `center`,\r\n    position: `relative`,\r\n    display: `block`\r\n  }\r\n}\r\n\r\nconst CardMedia = ({\r\n  imageVariant,\r\n  omitMedia,\r\n  mediaType,\r\n  title,\r\n  slug,\r\n  link,\r\n  ...props\r\n}) => {\r\n  const context = useThemeUI()\r\n\r\n  if (omitMedia) return null\r\n\r\n  const { variant, thumbnail, thumbnailText } = props\r\n\r\n  const imageVar =\r\n    imageVariant ||\r\n    get(context.theme, rv(variant, 'imageVariant')[0]) ||\r\n    DEFAULT_IMAGE_VARIANT\r\n\r\n  const image = getImageVariant(thumbnail, imageVar)\r\n\r\n  const linkProps = link\r\n    ? {\r\n        as: 'a',\r\n        href: link,\r\n        target: '_blank',\r\n        rel: 'noopener noreferrer'\r\n      }\r\n    : {\r\n        as: GLink,\r\n        to: slug\r\n      }\r\n\r\n  return (\r\n    <Link\r\n      {...linkProps}\r\n      css={styles.link}\r\n      sx={{ variant: rv(variant, 'media') }}\r\n      aria-label={title}\r\n    >\r\n      {mediaType === 'image' && image && (\r\n        <CardMediaImage image={image} title={title} {...props} />\r\n      )}\r\n      {(mediaType === 'icon' || (!image && thumbnailText)) && (\r\n        <CardMediaIcon {...props} />\r\n      )}\r\n    </Link>\r\n  )\r\n}\r\n\r\nCardMedia.defaultProps = {\r\n  mediaType: 'image'\r\n}\r\n\r\nexport default CardMedia\r\n","import React from 'react'\r\nimport { Box, Card, Flex } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport columnSizeMatcher from '@components/utils/columnSizeMatcher'\r\nimport Body from './Card.Body'\r\nimport Footer from './Card.Footer'\r\nimport Media from './Card.Media'\r\n\r\nconst styles = {\r\n  card: {\r\n    overflow: `hidden`,\r\n    height: `full`\r\n  },\r\n  content: {\r\n    alignItems: `stretch`,\r\n    height: `full`\r\n  }\r\n}\r\n\r\nconst CardBase = ({ columns, onMouseOver, ...props }) => (\r\n  <Box\r\n    className='blog_card'\r\n    sx={columnSizeMatcher(columns)}\r\n    onMouseOver={onMouseOver}\r\n    onFocus={onMouseOver}\r\n  >\r\n    <Card\r\n      variant='interactive'\r\n      sx={{\r\n        ...styles.card,\r\n        variant: rv(props.variant, 'card')\r\n      }}\r\n    >\r\n      <Flex\r\n        as='article'\r\n        sx={{\r\n          ...styles.content,\r\n          variant: rv(props.variant, 'content')\r\n        }}\r\n      >\r\n        <Media {...props} />\r\n        <Body {...props}>\r\n          <Footer {...props} />\r\n        </Body>\r\n      </Flex>\r\n    </Card>\r\n  </Box>\r\n)\r\n\r\nexport default CardBase\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport Base from './Card.Base'\r\n\r\nconst Card = ({ variantGroup, variant, aside, ...props }) => {\r\n  const responsiveVariant = rv(variantGroup, variant)\r\n  return <Base variant={responsiveVariant} {...props} />\r\n}\r\n\r\nexport default Card\r\n\r\nCard.defaultProps = {\r\n  variantGroup: 'cards',\r\n  variant: 'vertical'\r\n}\r\n\r\nCard.propTypes = {\r\n  variant: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.oneOf([\r\n      'horizontal',\r\n      'horizontal-aside',\r\n      'horizontal-md',\r\n      'horizontal-lg',\r\n      'horizontal-cover',\r\n      'horizontal-cover-hero',\r\n      'horizontal-cover-wide',\r\n      'horizontal-hero',\r\n      'vertical-cover',\r\n      'vertical',\r\n      'search'\r\n    ])\r\n  ]),\r\n  omitMedia: PropTypes.bool,\r\n  omitCategory: PropTypes.bool,\r\n  omitExcerpt: PropTypes.bool,\r\n  omitAuthor: PropTypes.bool,\r\n  omitBody: PropTypes.bool,\r\n  omitFooter: PropTypes.bool,\r\n  aside: PropTypes.bool,\r\n  columns: PropTypes.array,\r\n  mediaType: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.oneOf(['icon', 'image'])\r\n  ]),\r\n  imageVariant: PropTypes.string,\r\n  loading: PropTypes.oneOf(['lazy', 'auto', 'eager']),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  slug: PropTypes.string,\r\n  link: PropTypes.string,\r\n  category: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    color: PropTypes.string,\r\n    slug: PropTypes.string,\r\n    icon: PropTypes.string\r\n  }),\r\n  author: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    slug: PropTypes.string,\r\n    thumbnail: PropTypes.object\r\n  }),\r\n  date: PropTypes.string,\r\n  timeToRead: PropTypes.number,\r\n  excerpt: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  thumbnail: PropTypes.object,\r\n  thumbnailText: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { Box } from 'theme-ui'\r\nimport memphis from '../../assets/memphis.png'\r\n\r\nconst styles = {\r\n  pattern: {\r\n    size: `full`,\r\n    backgroundImage: `url(${memphis})`,\r\n    backgroundSize: `11rem`,\r\n    position: `absolute`,\r\n    opacity: 0.05,\r\n    top: 0,\r\n    left: 0\r\n  }\r\n}\r\n\r\nconst MemphisPattern = ({ sx = {}, ...props }) => (\r\n  <Box sx={{ ...styles.pattern, ...sx }} {...props}></Box>\r\n)\r\n\r\nexport default MemphisPattern\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box } from 'theme-ui'\r\n\r\nconst styles = {\r\n  wrapper: separator => ({\r\n    '> *': {\r\n      ':not(:last-child) + *:before': {\r\n        content: `\" ${separator} \"`\r\n      }\r\n    }\r\n  }),\r\n  nowrap: {\r\n    overflow: `hidden`,\r\n    textOverflow: `ellipsis`,\r\n    whiteSpace: `nowrap`\r\n  }\r\n}\r\n\r\nconst TextList = ({ nowrap, separator, children }) => (\r\n  <Box sx={{ ...(nowrap && styles.nowrap), ...styles.wrapper(separator) }}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default TextList\r\n\r\nTextList.defaultProps = {\r\n  separator: '・',\r\n  nowrap: false\r\n}\r\n\r\nTextList.propTypes = {\r\n  separator: PropTypes.string,\r\n  nowrap: PropTypes.bool\r\n}\r\n"],"names":["columns","Array","isArray","length","columnSizes","sizes","flexBasis","hex","indexOf","slice","parseInt","console","log","styles","mb","_ref","variant","category","omitCategory","slug","___EmotionJSX","Box","css","sx","rv","Badge","as","Link","to","color","bg","getReadableColor","name","title","link","linkProps","href","target","rel","GLink","Heading","_extends","flex","excerpt","omitExcerpt","context","useThemeUI","responsiveVariant","visibility","reduce","mobileVisibility","get","theme","display","Text","_objectSpread","flexDirection","justifyContent","children","omitBody","props","_objectWithoutProperties","_excluded","CardBodyCategory","CardBodyTitle","CardBodyExcerpt","imageWrapperSimple","verticalAlign","borderRadius","borderStyle","borderWidth","borderColor","overFlow","opacity","mr","img","AvatarSimple","avatar","size","alt","image","getImageVariant","Img","defaultProps","omitAuthor","author","thumbnail","pr","date","timeToRead","TextList","nowrap","FaRegClock","_css","wrapper","alignItems","postInfo","flexWrap","omitFooter","Flex","AuthorAvatar","AuthorName","Info","iconBox","height","iconAndText","position","fontWeight","zIndex","px","lineHeight","svg","pb","pattern","thumbnailText","icon","SVG","src","MemphisPattern","CardMediaImage","loading","userSelect","textAlign","CardMedia","imageVariant","omitMedia","mediaType","imageVar","CardMediaIcon","overflow","onMouseOver","className","columnSizeMatcher","onFocus","Card","Media","Body","Footer","variantGroup","aside","Base","backgroundImage","backgroundSize","top","left","separator","content","textOverflow","whiteSpace"],"sourceRoot":""}