{"version":3,"file":"component---packages-themes-gatsby-theme-flexiblog-minimal-v-2-src-pages-contact-jsx-4142c84baf6201550386.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/a-constructor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/classof.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/is-constructor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/native-promise-constructor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/new-promise-capability.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/promise-resolve.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/species-constructor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/internals/to-string-tag-support.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../node_modules/core-js/modules/es.promise.finally.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/ContactForm/ContactForm.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/common/gatsby-common-helpers/src/useForm.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-widgets/src/ContactForm/ContactForm.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/themes/gatsby-theme-flexiblog-minimal-v2/src/pages/contact.jsx"],"sourcesContent":["var global = require('../internals/global');\nvar isConstructor = require('../internals/is-constructor');\nvar tryToString = require('../internals/try-to-string');\n\nvar TypeError = global.TypeError;\n\n// `Assert: IsConstructor(argument) is true`\nmodule.exports = function (argument) {\n  if (isConstructor(argument)) return argument;\n  throw TypeError(tryToString(argument) + ' is not a constructor');\n};\n","var global = require('../internals/global');\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Object = global.Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(noop);\n\nvar isConstructorModern = function (argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function (argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n    // we can't check .prototype since constructors produced by .bind haven't it\n  } return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n};\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","'use strict';\nvar aCallable = require('../internals/a-callable');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable(resolve);\n  this.reject = aCallable(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var anObject = require('../internals/an-object');\nvar aConstructor = require('../internals/a-constructor');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aConstructor(S);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = isCallable(onFinally);\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromise)) {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromise.prototype['finally'] !== method) {\n    redefine(NativePromise.prototype, 'finally', method, { unsafe: true });\n  }\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, Label, Input, Textarea, Button, Message, Spinner } from 'theme-ui'\r\n\r\n/**\r\n * How to enable form integration:\r\n *\r\n * 1) Shadow this component\r\n * 2) Remove the demo attribute from the form tag.\r\n * 3) Add your action end-point to the form tag.\r\n * 4) If required by your form API provider, add the hidden input(s).\r\n *\r\n * Some recommended serverless form providers:\r\n * Getform (https://www.gatsbyjs.com/docs/building-a-contact-form/#getform)\r\n * Formspree (https://www.gatsbyjs.com/docs/building-a-contact-form/#formspree)\r\n * Netlify Form (https://www.gatsbyjs.com/docs/building-a-contact-form/#netlify)\r\n *\r\n */\r\n\r\nconst ContactForm = ({ handleSubmit, submitting, success }) => (\r\n  <form\r\n    onSubmit={handleSubmit}\r\n    method='POST'\r\n    action='YOUR_ACTION_END_POINT'\r\n    demo='demo'\r\n  >\r\n    {success === true && (\r\n      <Message variant='success'>\r\n        Thank you for contacting us. We'll get back to you soon!\r\n      </Message>\r\n    )}\r\n    {success === false && (\r\n      <Message variant='error'>\r\n        Something went wrong. Please try again later!\r\n      </Message>\r\n    )}\r\n    <Box variant='forms.row'>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-name'>Name</Label>\r\n        <Input type='text' id='contact-form-name' name='name' required />\r\n      </Box>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-company'>Company Name</Label>\r\n        <Input type='text' id='contact-form-company' name='company' />\r\n      </Box>\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-email'>Email</Label>\r\n        <Input\r\n          type='email'\r\n          placeholder='email@example.com'\r\n          id='contact-form-email'\r\n          name='email'\r\n          required\r\n        />\r\n      </Box>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-phone'>Phone Number</Label>\r\n        <Input\r\n          type='tel'\r\n          placeholder='(xxx) xxx-xxxx'\r\n          id='contact-form-phone'\r\n          name='phone'\r\n        />\r\n      </Box>\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Label htmlFor='contact-form-subject'>Subject</Label>\r\n      <Input type='text' id='contact-form-subject' name='subject' required />\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Label htmlFor='contact-form-message'>Your Message</Label>\r\n      <Textarea name='message' id='contact-form-message' />\r\n    </Box>\r\n    <Button\r\n      variant={success || submitting ? 'disabled' : 'primary'}\r\n      disabled={success || submitting}\r\n      type='submit'\r\n      required\r\n    >\r\n      Submit {submitting && <Spinner size='20' />}\r\n    </Button>\r\n  </form>\r\n)\r\n\r\nexport default ContactForm\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  submitting: PropTypes.bool,\r\n  success: PropTypes.bool\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\n\r\nconst useForm = () => {\r\n  const [submitting, setSubmitting] = useState(false)\r\n  const [target, setTarget] = useState({})\r\n  const [success, setSuccess] = useState()\r\n  const [values, setValues] = useState()\r\n  const [action, setAction] = useState()\r\n\r\n  const handleSubmit = (e, { values, action } = {}) => {\r\n    e.preventDefault()\r\n    if (values) setValues(values)\r\n    if (action) setAction(action)\r\n    setTarget(e.target)\r\n    setSubmitting(true)\r\n  }\r\n\r\n  const sendValues = useCallback(() => {\r\n    const form = new FormData(target)\r\n    const formData = new URLSearchParams(values || form).toString()\r\n    const isDemo = target.getAttribute('demo')\r\n\r\n    // Mimicking form submission for demos\r\n    if (isDemo) {\r\n      setTimeout(() => {\r\n        setSuccess(true)\r\n        setSubmitting(false)\r\n      }, 1500)\r\n      return\r\n    }\r\n\r\n    // Real form submission\r\n    fetch(action || target.action, {\r\n      method: target.method || 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Accept: 'application/json'\r\n      },\r\n      body: formData\r\n    })\r\n      .then(() => {\r\n        target.reset()\r\n        setSuccess(true)\r\n      })\r\n      .catch(error => {\r\n        setSuccess(false)\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false)\r\n      })\r\n  }, [target])\r\n\r\n  useEffect(() => {\r\n    if (submitting) {\r\n      sendValues()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [submitting, sendValues])\r\n\r\n  const reset = useCallback(() => {\r\n    setSubmitting(false)\r\n    setSuccess(undefined)\r\n    setValues(undefined)\r\n    setAction(undefined)\r\n  }, [])\r\n\r\n  return {\r\n    handleSubmit,\r\n    submitting,\r\n    success,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useForm\r\n","import React from 'react'\r\nimport { Card } from 'theme-ui'\r\nimport ContactFormComponent from '@components/ContactForm'\r\nimport useForm from '@helpers/useForm'\r\n\r\nconst ContactForm = () => {\r\n  const { handleSubmit, submitting, success } = useForm()\r\n\r\n  return (\r\n    <Card variant='paper'>\r\n      <ContactFormComponent {...{ handleSubmit, submitting, success }} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\r\nimport { Layout, Stack, Main } from '@layout'\r\nimport PageTitle from '@components/PageTitle'\r\nimport Divider from '@components/Divider'\r\nimport Seo from '@widgets/Seo'\r\nimport ContactForm from '@widgets/ContactForm'\r\n\r\nexport default props => (\r\n  <Layout {...props}>\r\n    <Seo title='Contact' />\r\n    <Divider />\r\n    <Stack>\r\n      <Main>\r\n        <PageTitle\r\n          header=\"Let's Connect\"\r\n          subheader='FlexiBlog theme comes with a pre-made contact form component.\r\n\t\t\t\t\tYou can integrate this form with serverless services such as Formspree, Getform,\r\n\t\t\t\t\tFormKeep and others to receive form submissions via email.'\r\n        />\r\n        <Divider />\r\n        <ContactForm />\r\n      </Main>\r\n    </Stack>\r\n  </Layout>\r\n)\r\n"],"names":["global","isConstructor","tryToString","TypeError","module","exports","argument","TO_STRING_TAG_SUPPORT","isCallable","classofRaw","TO_STRING_TAG","wellKnownSymbol","Object","CORRECT_ARGUMENTS","arguments","it","O","tag","result","undefined","key","error","tryGet","callee","uncurryThis","fails","classof","getBuiltIn","inspectSource","noop","empty","construct","constructorRegExp","exec","INCORRECT_TO_STRING","isConstructorModern","called","call","Promise","aCallable","PromiseCapability","C","resolve","reject","this","promise","$$resolve","$$reject","f","anObject","isObject","newPromiseCapability","x","constructor","promiseCapability","aConstructor","SPECIES","defaultConstructor","S","test","String","$","IS_PURE","NativePromise","speciesConstructor","promiseResolve","redefine","target","proto","real","forced","prototype","then","onFinally","isFunction","e","method","unsafe","handleSubmit","submitting","success","onSubmit","action","demo","variant","htmlFor","type","id","name","required","placeholder","disabled","size","useState","setSubmitting","setTarget","setSuccess","values","setValues","setAction","sendValues","useCallback","form","FormData","formData","URLSearchParams","toString","getAttribute","setTimeout","fetch","headers","Accept","body","reset","catch","finally","useEffect","preventDefault","useForm","props","Seo","title","Divider","PageTitle","header","subheader"],"sourceRoot":""}