{"version":3,"file":"component---packages-blog-gatsby-blog-core-src-templates-posts-js-691fcb90dbaaf64f2b9b.js","mappings":"8WAMA,MAAMA,EAAS,CACbC,OAAQ,CACNC,SAAU,CACRC,QAAQ,gBACRC,QAAQ,OACRC,WAAW,SACXC,UAAU,UACVC,SAAS,SACTC,GAAI,EACJC,EAAG,EACHC,GAAI,EACJC,IAAK,CACHC,MAAM,YACNC,cAAc,SACdC,KAAK,WAEP,SAAU,CACRH,IAAK,CACHC,MAAM,SAER,oBAAqB,CACnBG,GAAG,WAITC,WAAY,CACVb,QAAQ,oBACRM,EAAG,EACHE,IAAK,CACHC,MAAM,QACNE,KAAK,WAEP,SAAU,CACRH,IAAK,CACHC,MAAM,gBAKdK,KAAM,CACJf,SAAU,CACRE,QAAS,CAAC,OAAD,eACTc,WAAW,iBACXb,WAAW,SACXc,eAAe,SACfC,UAAU,UACVL,GAAG,aACHM,MAAO,IAETL,WAAY,CACVZ,QAAS,CAAC,QAAD,gBACTkB,UAAU,cACVJ,WAAW,iBACXK,aAAa,SACbF,MAAM,MACNG,OAAO,UACPC,GAAG,OACHC,GAAI,IAGRC,KAAM,CACJC,KAAK,OACLhB,MAAM,YACNiB,WAAW,SACXpB,EAAG,EACHqB,EAAG,IAIMC,EAAaC,IAAA,IAAC,QACzB7B,EAAO,KACP8B,EAAI,KACJC,EAAI,SACJC,EAAQ,UACRC,EAAS,GACTC,GACDL,EAAA,OACCM,EAAAA,EAAAA,GAACC,EAAAA,GAAM,CAACpC,QAAQ,OAAOqC,GAAIH,GAAMI,EAAAA,KAAMJ,GAAIA,EAAIK,GAAI1C,EAAOC,OAAOE,KAC7D+B,GAAQC,KACRG,EAAAA,EAAAA,GAACK,EAAAA,GAAG,CAACD,GAAI1C,EAAOiB,KAAKd,IAClBgC,IAAYG,EAAAA,EAAAA,GAACM,EAAAA,EAAG,CAACC,IAAKV,IACtBD,IAAQI,EAAAA,EAAAA,GAACJ,EAAI,CAACtB,MAAOwB,MAG1BE,EAAAA,EAAAA,GAACQ,EAAAA,GAAO,CAAC3C,QAAQ,KAAKqC,GAAG,OAAOE,GAAI1C,EAAO2B,MACxCM,GAEI,EAGX,QAEAF,EAAWgB,aAAe,CACxB5C,QAAS,aACT6C,YAAQC,G,+CC9FJjD,EAAS,CACbgB,WAAY,CACVZ,QAAQ,OACR8C,SAAS,SACTC,UAAU,OACV9B,MAAM,OACN+B,eAAe,SACftB,GAAI,EACJuB,EAAG,CACDzB,KAAM,EACN0B,SAAU,CAAC,MAAD,QACVxB,EAAG,KAKHyB,EAAavB,IAAA,IAAC,QAAE7B,EAAO,WAAEqD,GAAsBxB,EAAPyB,GAAKC,EAAAA,EAAAA,GAAA1B,EAAA2B,GAAA,OACjDrB,EAAAA,EAAAA,GAACsB,EAAAA,GAAOC,EAAAA,EAAAA,GAAA,CAACC,MAAmB,aAAZ3D,EAAwB4D,MAAM,UAAaN,IACzDnB,EAAAA,EAAAA,GAACK,EAAAA,GAAG,CAACD,GAAI1C,EAAOG,IACbqD,GACCA,EAAWQ,KAAIC,IAA2C,IAA1C,GAAEC,EAAE,KAAEjC,EAAI,KAAEkC,EAAI,WAAEC,EAAU,KAAEnD,GAAMgD,EAClD,MAAMI,EAAc,CAClBC,IAAKJ,EACLjC,OACAe,OAAQoB,EACR/B,GAAI8B,EACJhC,SAAUlB,EACViB,MAAOjB,GAAQsD,EAAAA,IACfpE,WAGF,OAAsB,IAAfiE,IAAoB9B,EAAAA,EAAAA,GAACP,EAAesC,EAAe,KAGxD,EAGZ,QAEAd,EAAWR,aAAe,CACxB5C,QAAS,Y,aCzCX,MAAMH,EAAS,CACbwE,QAAS,CACPnE,WAAW,SACXoE,cAAc,SACd1D,GAAG,eACHQ,aAAa,KACbT,KAAK,OACLL,EAAG,GAELiE,QAAS,CACP9D,MAAM,YACN+D,YAAa,IACbhE,IAAK,CACHC,MAAM,OACNE,KAAK,UACLV,QAAQ,QACRI,GAAI,IAGRoE,WAAY,CACVhE,MAAM,YACNiE,WAAW,UAEbC,KAAM,CACJlE,MAAM,YACNmE,UAAU,OACVjD,EAAG,EACHrB,EAAG,EACHuE,GAAI,CACFvE,EAAG,EACHwE,GAAI,GAEN,YAAa,CACXC,QAAQ,KACR9E,QAAQ,eACRiB,MAAM,UACNN,GAAG,UACHQ,aAAa,OACbT,KAAK,MACLqE,GAAG,QAGPlF,OAAQ,CACNG,QAAQ,QACRgF,GAAG,SA6BP,MAzBuBC,KACrB/C,EAAAA,EAAAA,GAACgD,EAAAA,GAAI,CAAC5C,GAAI1C,EAAOwE,UACflC,EAAAA,EAAAA,GAACQ,EAAAA,GAAO,CAAC3C,QAAQ,KAAKuC,GAAI1C,EAAO0E,UAC/BpC,EAAAA,EAAAA,GAACiD,EAAAA,IAAa,QAEhBjD,EAAAA,EAAAA,GAACQ,EAAAA,GAAO,CAAC3C,QAAQ,KAAKuC,GAAI1C,EAAO4E,YAAY,kFAG7CtC,EAAAA,EAAAA,GAACkD,EAAAA,GAAI,CAAChD,GAAG,KAAKrC,QAAQ,QAAQuC,GAAI1C,EAAO8E,OACvCxC,EAAAA,EAAAA,GAAA,UAAI,mDACJA,EAAAA,EAAAA,GAAA,UAAI,kDACJA,EAAAA,EAAAA,GAAA,UAAI,8CAENA,EAAAA,EAAAA,GAACC,EAAAA,GAAM,CACLpC,QAAQ,UACRqC,GAAIC,EAAAA,KACJJ,GAAG,aACHK,GAAI1C,EAAOC,OACX,aAAW,gBACZ,iB,+CC3DCwF,EAAazD,IAAwB,IAAvB,MAAC0D,EAAK,SAAEC,GAAS3D,EACnC,MAAM4D,EAAQF,EAAME,MAAMC,QAAQpF,GAAMA,EAAEqF,eAAiBH,IAAU,GAGrE,OACYrD,EAAAA,EAAAA,GAACyD,EAAAA,GAAK,CACJhC,MAAO6B,EAAME,aACbE,UAAWJ,EAAMK,MAAM,GAAGN,SAASxB,KACnC+B,UAAW,CAAC,SAAU,SAAU,SAAU,SAE1C5D,EAAAA,EAAAA,GAAC6D,EAAAA,GAAI,CACHzD,GAAI,CACF0D,GAAI,EACJhG,QAAS,CAAC,KAAK,QACfqE,cAAe,CAAC,SAAU,KAAM,KAAK,UAGvCnC,EAAAA,EAAAA,GAAC+D,EAAAA,EAAQ,CACPJ,MAAOL,EAAMK,MACbK,MAAO,EACPC,QAAS,CAAC,GACVpG,QAAS,CACP,gBACA,aACA,aACA,YAEFqG,cAAY,MAGhBlE,EAAAA,EAAAA,GAAC6D,EAAAA,GAAI,CACHzD,GAAI,CACF0D,GAAI,CAAC,EAAG,KAAM,KAAM,GACpBhG,QAAS,CAAC,KAAK,QACfqE,cAAe,CAAC,SAAU,KAAM,KAAK,UAGvCnC,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAAC+D,EAAAA,EAAQ,CACPJ,MAAOL,EAAMK,MACbK,MAAO,EACPK,KAAM,EACNJ,QAAS,CAAC,GACVpG,QAAS,CACP,gBACA,aACA,aACA,YAEFqG,cAAY,MAGhBlE,EAAAA,EAAAA,GAAC6D,EAAAA,GAAI,CACHzD,GAAI,CACF0D,GAAI,CAAC,EAAG,KAAM,KAAM,GACpBhG,QAAS,CAAC,KAAK,QACfqE,cAAe,CAAC,SAAU,KAAM,KAAK,UAGvCnC,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAAC+D,EAAAA,EAAQ,CACPJ,MAAOL,EAAMK,MACbK,MAAO,EACPK,KAAM,EACNJ,QAAS,CAAC,GACVpG,QAAS,CACP,gBACA,aACA,aACA,YAEFqG,cAAY,KAGV,EAKhBI,EAAY3C,IAAwB,IAAvB,MAACyB,EAAK,SAAEC,GAAS1B,EAClC,MAAM2B,EAAQF,EAAME,MAAMC,QAAQpF,GAAMA,EAAEqF,eAAiBH,IAAU,GAErE,OACYrD,EAAAA,EAAAA,GAACyD,EAAAA,GAAK,CACJhC,MAAO6B,EAAME,aACbE,UAAWJ,EAAMK,MAAM,GAAGN,SAASxB,KACnC+B,UAAW,CAAC,SAAU,SAAU,SAAU,SAE1C5D,EAAAA,EAAAA,GAAC6D,EAAAA,GAAI,CACHzD,GAAI,CACF0D,GAAI,EACJhG,QAAS,CAAC,KAAK,QACfqE,cAAe,CAAC,SAAU,KAAM,KAAK,UAGvCnC,EAAAA,EAAAA,GAAC+D,EAAAA,EAAQ,CACPJ,MAAOL,EAAMK,MACbK,MAAO,EACPC,QAAS,CAAC,GACVpG,QAAS,CACP,gBACA,aACA,aACA,YAEFqG,cAAY,MAGdlE,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAClBpE,EAAAA,EAAAA,GAAC6D,EAAAA,GAAI,CACHzD,GAAI,CACF0D,GAAI,CAAC,EAAG,KAAM,KAAM,GACpBhG,QAAS,CAAC,KAAK,QACfqE,cAAe,CAAC,SAAU,KAAM,KAAK,UAGvCnC,EAAAA,EAAAA,GAAC+D,EAAAA,EAAQ,CACPJ,MAAOL,EAAMK,MACbK,MAAO,EACPK,KAAM,EACNJ,QAAS,CAAC,GACVpG,QAAS,CACP,gBACA,aACA,aACA,YAEFqG,cAAY,MAGhBlE,EAAAA,EAAAA,GAAC6D,EAAAA,GAAI,CACHzD,GAAI,CACF0D,GAAI,CAAC,EAAG,KAAM,KAAM,GACpBhG,QAAS,CAAC,KAAK,QACfqE,cAAe,CAAC,SAAU,KAAM,KAAK,UAGvCnC,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAAC+D,EAAAA,EAAQ,CACPJ,MAAOL,EAAMK,MACbK,MAAO,EACPK,KAAM,EACNJ,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBpG,QAAS,CACP,gBACA,aACA,oBAEFqG,cAAY,KAEdlE,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAEZ,EAqFtB,MA/EcG,IAGP,IAFLC,MAAM,MAAEpB,EAAQ,CAAC,EAAC,cAAEqB,EAAgB,CAAC,EAAC,eAAEC,EAAiB,CAAC,EAAC,YAAEC,EAAc,CAAC,IAE7EJ,EADIpD,GAAKC,EAAAA,EAAAA,GAAAmD,EAAAlD,GAER,MAAQuD,aAAa,SAAEC,EAAW,CAAC,EAAC,SAAEC,GAAa,CAAC,GAAM3D,GACpD,OAAE4D,IAAWC,EAAAA,EAAAA,KACb9D,GAAa+D,EAAAA,EAAAA,MAGbC,EAAe,CAAC,UAAW,YAAa,eAAexD,KAAIG,GACxD4C,EAAcd,MAAMwB,MAAKC,GAAeA,EAAIvD,OAASA,MAG9D,OACE7B,EAAAA,EAAAA,GAACqF,EAAAA,GAAWlE,GACVnB,EAAAA,EAAAA,GAACsF,EAAAA,EAAG,CAAC7D,MAAM,UAEXzB,EAAAA,EAAAA,GAACyD,EAAAA,GAAK,CAAC8B,YAAa,CAAEC,QAAQ,KAC1BxF,EAAAA,EAAAA,GAACyF,EAAAA,GAAI,QAITzF,EAAAA,EAAAA,GAACyD,EAAAA,GAAK,CAAC8B,YAAa,CAAEC,QAAQ,KAC5BxF,EAAAA,EAAAA,GAAC6D,EAAAA,GAAI,MACH7D,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAAC+D,EAAAA,EAAQ,CACPJ,MAAOgB,EAAYhB,MACnBK,MAAO,EACPC,QAAS,CAAC,EAAG,GACbpG,QAAQ,mBACR6H,QAAQ,YAGZ1F,EAAAA,EAAAA,GAAC2F,EAAAA,GAAO,CAACvF,GAAI,CAAE0D,GAAG,IAAM8B,UAAU,SAChC5F,EAAAA,EAAAA,GAAC+C,EAAc,SAInB/C,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAEhBpE,EAAAA,EAAAA,GAACyD,EAAAA,GAAK,CAAC8B,YAAa,CAAEC,QAAQ,KAC9BxF,EAAAA,EAAAA,GAAC6D,EAAAA,GAAI,MAEL7D,EAAAA,EAAAA,GAACmD,EAAU,CAACC,MAAOA,EAAOC,SAAS,cACnCrD,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAACsE,EAAS,CAAClB,MAAOA,EAAOC,SAAS,aAClCrD,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAACmD,EAAU,CAACC,MAAOA,EAAOC,SAAS,uBACnCrD,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAACsE,EAAS,CAAClB,MAAOA,EAAOC,SAAS,oBAGhCrD,EAAAA,EAAAA,GAAC2F,EAAAA,GAAO,MACN3F,EAAAA,EAAAA,GAAC6F,EAAAA,EAAM,MACP7F,EAAAA,EAAAA,GAACiB,EAAU,CAACC,WAAYA,EAAYO,MAAM,MAC1CzB,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAChBpE,EAAAA,EAAAA,GAAC+D,EAAAA,EAAQ,CACPJ,MAAOuB,EACPlB,MAAO,EACPC,QAAS,CAAC,EAAG,EAAG,GAChBpG,QAAQ,mBACR6H,QAAQ,QACRI,YAAU,KAEZ9F,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KACdpE,EAAAA,EAAAA,GAAC+F,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAkBlB,GAASmB,UAAQ,QAK5DlG,EAAAA,EAAAA,GAACmE,EAAAA,EAAO,CAACC,MAAO,KAEhBpE,EAAAA,EAAAA,GAACmG,EAAAA,GAAS,MACH,ECnPb,G,8FCHA,SAASC,EAAEA,EAAEC,QAAG,IAASA,IAAIA,EAAEC,KAAKC,WAAW,IAAI,IAAIC,EAAE,GAAGzF,EAAE,CAAC,EAAE0F,EAAE,EAAEA,EAAEL,EAAEM,OAAOD,IAAI,CAAC,IAAIE,EAAEP,EAAEK,GAAGG,EAAEP,EAAEM,GAAG5F,EAAE6F,KAAKJ,EAAEK,KAAKF,GAAG5F,EAAE6F,IAAG,EAAG,CAAC,OAAOJ,CAAC,CCGlI,MAAMvB,EAAoBA,KAC/B,MAAM,mBAAE6B,IAAuBC,EAAAA,EAAAA,gBAAeC,GAC9C,OAAOF,EAAmBnD,MACtBsD,EAAOH,EAAmBnD,OAAOuD,GAAQA,EAAKrF,OAC9C,IAAI,EAGJmF,EAAe,aCPRG,EAAiBA,KAC5B,MAAM,iBAAEC,IAAqBL,EAAAA,EAAAA,gBAAeM,GAC5C,OAAOD,EAAiBzD,MACpBsD,EAAOG,EAAiBzD,OAAOuD,GAAQA,EAAKrF,OAC5C,IAAI,EAGJwF,EAAY,Y,sFCHlB,MAJe3H,IAAA,IAAC,SAAE4H,GAAU5H,EAAA,OAC1BM,EAAAA,EAAAA,GAACuH,EAAAA,GAAS,CAAC1J,QAAQ,UAAUyJ,EAAqB,C","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/IconButton/IconButton.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-widgets/src/Categories/Categories.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/./src/@elegantstack/flow-ui-widgets/BannerVertical/BannerVertical.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/./src/@elegantstack/gatsby-theme-flexiblog-agency/containers/Posts.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/blog/gatsby-blog-core/src/templates/posts.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/blog/gatsby-blog-helpers/node_modules/dedupe/dist/index.esm.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/blog/gatsby-blog-helpers/src/useBlogCategories.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/blog/gatsby-blog-helpers/src/useBlogAuthors.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Sticky/Sticky.jsx"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport SVG from 'react-inlinesvg'\r\nimport { Button, Box, Heading } from 'theme-ui'\r\n\r\nconst styles = {\r\n  button: {\r\n    vertical: {\r\n      variant: `cards.primary`,\r\n      display: `flex`,\r\n      alignItems: `center`,\r\n      textAlign: `initial`,\r\n      overflow: `hidden`,\r\n      mb: 3,\r\n      p: 0,\r\n      pr: 2,\r\n      svg: {\r\n        color: `omegaDark`,\r\n        verticalAlign: `middle`,\r\n        size: `icon.xs`\r\n      },\r\n      ':hover': {\r\n        svg: {\r\n          color: `white`\r\n        },\r\n        'div:first-of-type': {\r\n          bg: `alpha`\r\n        }\r\n      }\r\n    },\r\n    horizontal: {\r\n      variant: `cards.interactive`,\r\n      p: 0,\r\n      svg: {\r\n        color: `alpha`,\r\n        size: `icon.sm`\r\n      },\r\n      ':hover': {\r\n        svg: {\r\n          color: `omegaDark`\r\n        }\r\n      }\r\n    }\r\n  },\r\n  icon: {\r\n    vertical: {\r\n      display: [`flex`, `none`, `flex`],\r\n      transition: `all 250ms ease`,\r\n      alignItems: `center`,\r\n      justifyContent: `center`,\r\n      alignSelf: `stretch`,\r\n      bg: `omegaLight`,\r\n      width: 70\r\n    },\r\n    horizontal: {\r\n      display: [`block`, `none`, `block`],\r\n      boxSizing: `content-box`,\r\n      transition: `all 250ms ease`,\r\n      borderRadius: `bottom`,\r\n      width: `1/3`,\r\n      height: `icon.sm`,\r\n      mx: `auto`,\r\n      pt: 3\r\n    }\r\n  },\r\n  text: {\r\n    flex: `auto`,\r\n    color: `omegaDark`,\r\n    whiteSpace: `nowrap`,\r\n    p: 3,\r\n    m: 0\r\n  }\r\n}\r\n\r\nexport const IconButton = ({\r\n  variant,\r\n  name,\r\n  Icon,\r\n  iconPath,\r\n  iconColor,\r\n  to\r\n}) => (\r\n  <Button variant='none' as={to && Link} to={to} sx={styles.button[variant]}>\r\n    {(Icon || iconPath) && (\r\n      <Box sx={styles.icon[variant]}>\r\n        {iconPath && <SVG src={iconPath} />}\r\n        {Icon && <Icon color={iconColor} />}\r\n      </Box>\r\n    )}\r\n    <Heading variant='h4' as='span' sx={styles.text}>\r\n      {name}\r\n    </Heading>\r\n  </Button>\r\n)\r\n\r\nexport default IconButton\r\n\r\nIconButton.defaultProps = {\r\n  variant: 'horizontal',\r\n  number: undefined\r\n}\r\n\r\nIconButton.propTypes = {\r\n  variant: PropTypes.oneOf(['horizontal', 'vertical']),\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  Icon: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\r\n  iconPath: PropTypes.string,\r\n  to: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { Box } from 'theme-ui'\r\nimport { FaArchive } from 'react-icons/fa'\r\nimport IconButton from '@components/IconButton'\r\nimport Section from '@components/Section'\r\n\r\nconst styles = {\r\n  horizontal: {\r\n    display: `flex`,\r\n    flexWrap: `nowrap`,\r\n    overflowX: `auto`,\r\n    width: `auto`,\r\n    scrollBehavior: `smooth`,\r\n    m: -2,\r\n    a: {\r\n      flex: 1,\r\n      minWidth: [`1/3`, `auto`],\r\n      m: 2\r\n    }\r\n  }\r\n}\r\n\r\nconst Categories = ({ variant, categories, ...props }) => (\r\n  <Section aside={variant === 'vertical'} title='Topics' {...props}>\r\n    <Box sx={styles[variant]}>\r\n      {categories &&\r\n        categories.map(({ id, name, slug, totalCount, icon }) => {\r\n          const buttonProps = {\r\n            key: id,\r\n            name,\r\n            number: totalCount,\r\n            to: slug,\r\n            iconPath: icon,\r\n            Icon: !icon && FaArchive,\r\n            variant\r\n          }\r\n\r\n          return totalCount !== 0 && <IconButton {...buttonProps} />\r\n        })}\r\n    </Box>\r\n  </Section>\r\n)\r\n\r\nexport default Categories\r\n\r\nCategories.defaultProps = {\r\n  variant: 'vertical'\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Flex, Button, Heading, Text } from 'theme-ui'\r\nimport { FaUserFriends } from 'react-icons/fa'\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    alignItems: `center`,\r\n    flexDirection: `column`,\r\n    bg: `omegaLighter`,\r\n    borderRadius: `lg`,\r\n    size: `full`,\r\n    p: 4,\r\n  },\r\n  heading: {\r\n    color: `omegaDark`,\r\n    wordSpacing: 500, //force line breaks\r\n    svg: {\r\n      color: `beta`,\r\n      size: `icon.lg`,\r\n      display: `block`,\r\n      mb: 3,\r\n    },\r\n  },\r\n  subheading: {\r\n    color: `omegaDark`,\r\n    fontWeight: `normal`,\r\n  },\r\n  list: {\r\n    color: `omegaDark`,\r\n    listStyle: `none`,\r\n    m: 0,\r\n    p: 0,\r\n    li: {\r\n      p: 0,\r\n      my: 2,\r\n    },\r\n    'li:before': {\r\n      content: `\"\"`,\r\n      display: `inline-block`,\r\n      width: `icon.xs`,\r\n      bg: `success`,\r\n      borderRadius: `full`,\r\n      size: `7px`,\r\n      mr: `7px`,\r\n    },\r\n  },\r\n  button: {\r\n    display: `block`,\r\n    mt: `auto`,\r\n  },\r\n}\r\n\r\nconst BannerVertical = () => (\r\n  <Flex sx={styles.wrapper}>\r\n    <Heading variant='h2' sx={styles.heading}>\r\n      <FaUserFriends />\r\n    </Heading>\r\n    <Heading variant='h4' sx={styles.subheading}>\r\n      EPI2ME provides best practice bioinformatics analyses for nanopore sequencing\r\n    </Heading>\r\n    <Text as='ul' variant='small' sx={styles.list}>\r\n      <li>Simply and easily analyse your sequencing data</li>\r\n      <li>Transparent: all our analyses are open source</li>\r\n      <li>No need to upload your data to the cloud</li>\r\n    </Text>\r\n    <Button\r\n      variant='primary'\r\n      as={Link}\r\n      to='/downloads'\r\n      sx={styles.button}\r\n      aria-label='Download Now'\r\n    >\r\n      Download Now\r\n    </Button>\r\n  </Flex>\r\n)\r\n\r\nexport default BannerVertical\r\n","import React from 'react'\r\nimport { Layout, Stack, Hero, Main, PreFooter, Sidebar } from '@layout'\r\nimport CardList from '@components/CardList'\r\nimport Divider from '@components/Divider'\r\nimport Navigation from '@components/Navigation'\r\nimport Seo from '@widgets/Seo'\r\nimport Categories from '@widgets/Categories'\r\nimport Sticky from '@components/Sticky'\r\nimport BannerVertical from '@widgets/BannerVertical'\r\nimport attachSocialIcons from '@helpers/attachSocialIcons'\r\nimport useSiteMetadata from '@helpers-blog/useSiteMetadata'\r\nimport { useBlogCategories } from '@helpers-blog'\r\n\r\nconst ThreePosts = ({posts, category}) => {\r\n  const group = posts.group.filter((p) => p.categoryName === category)[0]\r\n\r\n\r\n  return (\r\n              <Stack\r\n                title={group.categoryName}\r\n                titleLink={group.nodes[0].category.slug}\r\n                direction={['column', 'column', 'column', 'row']}\r\n              >\r\n                <Main\r\n                  sx={{\r\n                    pl: 0,\r\n                    display: [null, `flex`],\r\n                    flexDirection: [`column`, null, null, `row`]\r\n                  }}\r\n                >\r\n                  <CardList\r\n                    nodes={group.nodes}\r\n                    limit={1}\r\n                    columns={[1]}\r\n                    variant={[\r\n                      'horizontal-md',\r\n                      'horizontal',\r\n                      'horizontal',\r\n                      'vertical'\r\n                    ]}\r\n                    omitCategory\r\n                  />\r\n                </Main>\r\n                <Main\r\n                  sx={{\r\n                    pl: [0, null, null, 3],\r\n                    display: [null, `flex`],\r\n                    flexDirection: [`column`, null, null, `row`]\r\n                  }}\r\n                >\r\n                  <Divider space={2} />\r\n                  <CardList\r\n                    nodes={group.nodes}\r\n                    limit={1}\r\n                    skip={1}\r\n                    columns={[1]}\r\n                    variant={[\r\n                      'horizontal-md',\r\n                      'horizontal',\r\n                      'horizontal',\r\n                      'vertical'\r\n                    ]}\r\n                    omitCategory\r\n                  />\r\n                </Main>\r\n                <Main\r\n                  sx={{\r\n                    pl: [0, null, null, 3],\r\n                    display: [null, `flex`],\r\n                    flexDirection: [`column`, null, null, `row`]\r\n                  }}\r\n                >\r\n                  <Divider space={2} />\r\n                  <CardList\r\n                    nodes={group.nodes}\r\n                    limit={1}\r\n                    skip={2}\r\n                    columns={[1]}\r\n                    variant={[\r\n                      'horizontal-md',\r\n                      'horizontal',\r\n                      'horizontal',\r\n                      'vertical'\r\n                    ]}\r\n                    omitCategory\r\n                  />\r\n                </Main>\r\n              </Stack>\r\n  )\r\n}\r\n\r\n\r\nconst FivePosts = ({posts, category}) => {\r\n  const group = posts.group.filter((p) => p.categoryName === category)[0]\r\n\r\n  return (\r\n              <Stack\r\n                title={group.categoryName}\r\n                titleLink={group.nodes[0].category.slug}\r\n                direction={['column', 'column', 'column', 'row']}\r\n              >\r\n                <Main\r\n                  sx={{\r\n                    pl: 0,\r\n                    display: [null, `flex`],\r\n                    flexDirection: [`column`, null, null, `row`]\r\n                  }}\r\n                >\r\n                  <CardList\r\n                    nodes={group.nodes}\r\n                    limit={1}\r\n                    columns={[1]}\r\n                    variant={[\r\n                      'horizontal-md',\r\n                      'horizontal',\r\n                      'horizontal',\r\n                      'vertical'\r\n                    ]}\r\n                    omitCategory\r\n                  />\r\n                </Main>\r\n                  <Divider space={2} />\r\n                <Main\r\n                  sx={{\r\n                    pl: [0, null, null, 3],\r\n                    display: [null, `flex`],\r\n                    flexDirection: [`column`, null, null, `row`]\r\n                  }}\r\n                >\r\n                  <CardList\r\n                    nodes={group.nodes}\r\n                    limit={1}\r\n                    skip={1}\r\n                    columns={[1]}\r\n                    variant={[\r\n                      'horizontal-md',\r\n                      'horizontal',\r\n                      'horizontal',\r\n                      'vertical'\r\n                    ]}\r\n                    omitCategory\r\n                  />\r\n                </Main>\r\n                <Main\r\n                  sx={{\r\n                    pl: [0, null, null, 3],\r\n                    display: [null, `flex`],\r\n                    flexDirection: [`column`, null, null, `row`]\r\n                  }}\r\n                >\r\n                  <Divider space={2} />\r\n                  <CardList\r\n                    nodes={group.nodes}\r\n                    limit={2}\r\n                    skip={2}\r\n                    columns={[1, 1, 3, 1]}\r\n                    variant={[\r\n                      'horizontal-md',\r\n                      'horizontal',\r\n                      'horizontal-aside',\r\n                    ]}\r\n                    omitCategory\r\n                  />\r\n                  <Divider space={2} />\r\n                </Main>\r\n              </Stack>\r\n\r\n  )\r\n}\r\n\r\n\r\nconst Posts = ({\r\n  data: { posts = {}, featuredPosts = {}, paginatedPosts = {}, recentPosts = {} },\r\n  ...props\r\n}) => {\r\n  const { pageContext: { services = {}, basePath } = {} } = props\r\n  const { social } = useSiteMetadata()\r\n  const categories = useBlogCategories()\r\n\r\n  // Present the sidebar links in the same order as the Hero links\r\n  const sideBarPosts = [\"/about/\", \"/wfindex/\", \"/dataindex/\"].map(slug => { \r\n    return featuredPosts.nodes.find(obj => {return obj.slug === slug})\r\n  })\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <Seo title='Home' />\r\n\r\n      <Stack effectProps={{ effect: false }}>\r\n          <Hero />\r\n      </Stack>\r\n\r\n\r\n      <Stack effectProps={{ effect: false }}>\r\n        <Main>\r\n          <Divider space={2} />\r\n          <CardList\r\n            nodes={recentPosts.nodes}\r\n            limit={6}\r\n            columns={[1, 2]}\r\n            variant='horizontal-aside'\r\n            loading='eager'\r\n          />\r\n        </Main>\r\n        <Sidebar sx={{ pl: `3`, flexBasis: `1/4` }}>\r\n          <BannerVertical />\r\n        </Sidebar>\r\n      </Stack>\r\n\r\n      <Divider space={4} />\r\n\r\n      <Stack effectProps={{ effect: false }}>\r\n      <Main>\r\n\r\n      <ThreePosts posts={posts} category=\"Articles\" />\r\n      <Divider space={2} />\r\n      <FivePosts posts={posts} category=\"How Tos\" />\r\n      <Divider space={2} />\r\n      <ThreePosts posts={posts} category=\"Software Releases\" />\r\n      <Divider space={2} />\r\n      <FivePosts posts={posts} category=\"Data Releases\" />\r\n\r\n      </Main>\r\n        <Sidebar>\r\n          <Sticky>\r\n          <Categories categories={categories} title=\"\"/>\r\n          <Divider space={1} />\r\n          <Divider space={1} />\r\n          <Divider space={1} />\r\n          <CardList\r\n            nodes={sideBarPosts}\r\n            limit={6}\r\n            columns={[1, 1, 1]}\r\n            variant='horizontal-aside'\r\n            loading='eager'\r\n            omitFooter\r\n          />\r\n          <Divider space={1} />\r\n            <Navigation items={attachSocialIcons(social)} iconOnly />\r\n          </Sticky>\r\n        </Sidebar>\r\n      </Stack> \r\n      \r\n      <Divider space={2} />\r\n\r\n      <PreFooter></PreFooter>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import { graphql } from 'gatsby'\nimport PostsPage from '../containers/Posts'\n\nexport default PostsPage\n\nexport const pageQuery = graphql`\n  query PostsPageQuery(\n    $paginatePostsPage: Boolean!\n    $skip: Int\n    $limit: Int\n    $includeExcerpt: Boolean!\n    $includeTimeToRead: Boolean!\n    $imageQuality: Int!\n  ) {\n    featuredPosts: allArticle(\n      filter: {\n        private: { ne: true }\n        draft: { ne: true }\n        featured: { eq: true }\n      }\n      sort: { date: DESC }\n      limit: 10\n    ) {\n      nodes {\n        ...ArticlePreview\n        ...ArticleThumbnailFeatured\n      }\n    }\n    recentPosts: allArticle(\n      filter: { private: { ne: true }, draft: { ne: true } }\n      sort: { date: DESC }\n      limit: 6\n    ) {\n      nodes {\n        ...ArticlePreview\n        ...ArticleThumbnailRegular\n      }\n    }\n    posts: allArticle(\n      filter: { private: { ne: true }, draft: { ne: true } }\n      sort: { date: DESC }\n      limit: 1000\n    ) @skip(if: $paginatePostsPage) {\n      group(field: { category: { name: SELECT } }, limit: 10) {\n        categoryName: fieldValue\n        nodes {\n          ...ArticlePreview\n          ...ArticleThumbnailRegular\n        }\n      }\n    }\n    paginatedPosts: allArticle(\n      filter: { private: { ne: true }, draft: { ne: true } }\n      sort: { date: DESC }\n      limit: $limit\n      skip: $skip\n    ) @include(if: $paginatePostsPage) {\n      nodes {\n        ...ArticlePreview\n        ...ArticleThumbnailRegular\n      }\n      ...ArticlePagination\n    }\n  }\n`\n","function r(r,t){void 0===t&&(t=JSON.stringify);for(var n=[],a={},e=0;e<r.length;e++){var f=r[e],i=t(f);a[i]||(n.push(f),a[i]=!0)}return n}export{r as default};\n","import { useStaticQuery, graphql } from 'gatsby'\r\nimport dedupe from 'dedupe'\r\n\r\nexport const useBlogCategories = () => {\r\n  const { allArticleCategory } = useStaticQuery(categoriesQuery)\r\n  return allArticleCategory.nodes\r\n    ? dedupe(allArticleCategory.nodes, node => node.slug)\r\n    : null\r\n}\r\n\r\nconst categoriesQuery = graphql`\r\n  query allArticleCategoryQuery {\r\n    allArticleCategory {\r\n      nodes {\r\n        ...ArticleCategory\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\nimport dedupe from 'dedupe'\r\n\r\nexport const useBlogAuthors = () => {\r\n  const { allArticleAuthor } = useStaticQuery(authorsQuery)\r\n  return allArticleAuthor.nodes\r\n    ? dedupe(allArticleAuthor.nodes, node => node.slug)\r\n    : null\r\n}\r\n\r\nconst authorsQuery = graphql`\r\n  query allArticleAuthorQuery {\r\n    allArticleAuthor {\r\n      nodes {\r\n        ...ArticleAuthor\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Container } from 'theme-ui'\r\n\r\nconst Sticky = ({ children }) => (\r\n  <Container variant='sticky'>{children}</Container>\r\n)\r\n\r\nexport default Sticky\r\n"],"names":["styles","button","vertical","variant","display","alignItems","textAlign","overflow","mb","p","pr","svg","color","verticalAlign","size","bg","horizontal","icon","transition","justifyContent","alignSelf","width","boxSizing","borderRadius","height","mx","pt","text","flex","whiteSpace","m","IconButton","_ref","name","Icon","iconPath","iconColor","to","___EmotionJSX","Button","as","Link","sx","Box","SVG","src","Heading","defaultProps","number","undefined","flexWrap","overflowX","scrollBehavior","a","minWidth","Categories","categories","props","_objectWithoutProperties","_excluded","Section","_extends","aside","title","map","_ref2","id","slug","totalCount","buttonProps","key","FaArchive","wrapper","flexDirection","heading","wordSpacing","subheading","fontWeight","list","listStyle","li","my","content","mr","mt","BannerVertical","Flex","FaUserFriends","Text","ThreePosts","posts","category","group","filter","categoryName","Stack","titleLink","nodes","direction","Main","pl","CardList","limit","columns","omitCategory","Divider","space","skip","FivePosts","_ref3","data","featuredPosts","paginatedPosts","recentPosts","pageContext","services","basePath","social","useSiteMetadata","useBlogCategories","sideBarPosts","find","obj","Layout","Seo","effectProps","effect","Hero","loading","Sidebar","flexBasis","Sticky","omitFooter","Navigation","items","attachSocialIcons","iconOnly","PreFooter","r","t","JSON","stringify","n","e","length","f","i","push","allArticleCategory","useStaticQuery","categoriesQuery","dedupe","node","useBlogAuthors","allArticleAuthor","authorsQuery","children","Container"],"sourceRoot":""}