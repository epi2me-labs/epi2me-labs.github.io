{
    "componentChunkName": "component---packages-blog-gatsby-blog-core-src-templates-post-js",
    "path": "/workflows/wf-single-cell/",
    "result": {"data":{"post":{"id":"28118e51-5629-5ea9-81d8-264e44542ab1","title":"wf-single-cell documentation","slug":"/workflows/wf-single-cell/","link":null,"excerpt":"Workflow single-cell wf-single-cell is a research pipeline designed to identify the cell barcode\nandâ€¦","tableOfContents":{"items":[{"url":"#workflow-single-cell","title":"Workflow single-cell","items":[{"url":"#introduction","title":"Introduction"},{"url":"#package-dependencies","title":"Package dependencies"},{"url":"#quickstart","title":"Quickstart"}]}]},"timeToRead":3,"featured":null,"protected":null,"thumbnailText":null,"date":null,"category":null,"author":{"id":"a1a98724-b76e-51fb-b938-05e970ce06ae","name":"EPI2ME Labs","slug":"/author/epi2me-labs/","title":"Senior Button Pusher","description":"I'm a robot. I like to publish JupyterLab tutorials, Nextflow workflows, and blog posts.","skills":["Continuous Deployment"],"social":[{"name":"Twitter","url":"https://twitter.com/nanopore"},{"name":"Website","url":"https://labs.epi2me.io"}],"thumbnail":{"__typename":"ImageSharp","ImageSharp_small":{"layout":"fixed","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='150'%20height='150'%20viewBox='0%200%20150%20150'%20preserveAspectRatio='none'%3e%3cpath%20d='M64%202C42%207%2030%2036%2044%2048c7%206%2013%207%2031%207%2015%200%2017%200%2022-2%2011-4%2015-9%2015-19%200-23-24-39-48-32m3%205c-14%204-24%2016-23%2028%201%2010%2010%2014%2031%2014%2026%200%2035-7%2029-23-4-14-22-23-37-19M52%2023c-3%202%203%208%208%208%204%200%209-4%209-6%200-3-3-4-6-2s-3%202-6%201c-2-2-4-2-5-1m31%200c-2%201-1%204%202%206%205%203%209%203%2013-1%205-4%201-8-5-4h-4c-3-2-5-2-6-1M34%2059c-2%201-1%208%201%2021%206%2036%2017%2060%2031%2067%2021%2011%2041-16%2049-67%202-14%203-21%201-21-1-1-4%200-8%201a233%20233%200%2001-74-1m7%2015c6%2045%2022%2074%2037%2069%2015-4%2025-28%2032-75%201-2%201-2-3-2-17%203-47%203-64%200h-4l2%208'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/c489ff6e3b007deccb15ccbd6b76ce51/a7a66/epi2melabs.png","srcSet":"/static/c489ff6e3b007deccb15ccbd6b76ce51/a7a66/epi2melabs.png 48w,\n/static/c489ff6e3b007deccb15ccbd6b76ce51/416a0/epi2melabs.png 96w","sizes":"48px"},"sources":[{"srcSet":"/static/c489ff6e3b007deccb15ccbd6b76ce51/a3542/epi2melabs.webp 48w,\n/static/c489ff6e3b007deccb15ccbd6b76ce51/0f66d/epi2melabs.webp 96w","type":"image/webp","sizes":"48px"}]},"width":48,"height":48},"ImageSharp_regular":{"layout":"fixed","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='150'%20height='150'%20viewBox='0%200%20150%20150'%20preserveAspectRatio='none'%3e%3cpath%20d='M64%202C42%207%2030%2036%2044%2048c7%206%2013%207%2031%207%2015%200%2017%200%2022-2%2011-4%2015-9%2015-19%200-23-24-39-48-32m3%205c-14%204-24%2016-23%2028%201%2010%2010%2014%2031%2014%2026%200%2035-7%2029-23-4-14-22-23-37-19M52%2023c-3%202%203%208%208%208%204%200%209-4%209-6%200-3-3-4-6-2s-3%202-6%201c-2-2-4-2-5-1m31%200c-2%201-1%204%202%206%205%203%209%203%2013-1%205-4%201-8-5-4h-4c-3-2-5-2-6-1M34%2059c-2%201-1%208%201%2021%206%2036%2017%2060%2031%2067%2021%2011%2041-16%2049-67%202-14%203-21%201-21-1-1-4%200-8%201a233%20233%200%2001-74-1m7%2015c6%2045%2022%2074%2037%2069%2015-4%2025-28%2032-75%201-2%201-2-3-2-17%203-47%203-64%200h-4l2%208'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/c489ff6e3b007deccb15ccbd6b76ce51/46e60/epi2melabs.png","srcSet":"/static/c489ff6e3b007deccb15ccbd6b76ce51/46e60/epi2melabs.png 150w,\n/static/c489ff6e3b007deccb15ccbd6b76ce51/d612b/epi2melabs.png 300w","sizes":"150px"},"sources":[{"srcSet":"/static/c489ff6e3b007deccb15ccbd6b76ce51/ae23d/epi2melabs.webp 150w,\n/static/c489ff6e3b007deccb15ccbd6b76ce51/bd37b/epi2melabs.webp 300w","type":"image/webp","sizes":"150px"}]},"width":150,"height":150}}},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"wf-single-cell documentation\",\n  \"slug\": \"workflows/wf-single-cell\",\n  \"author\": \"EPI2ME Labs\",\n  \"private\": true,\n  \"category\": \"Workflows\",\n  \"keywords\": [\"epi2melabs\", \"nanopore sequencing\"],\n  \"description\": \"Documentation for the wf-single-cell workflow.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"workflow-single-cell\"\n  }, \"Workflow single-cell\"), mdx(\"p\", null, \"wf-single-cell is a research pipeline designed to identify the cell barcode\\nand UMI sequences present in nanopore sequencing reads generated from single-cell gene expression libraries. \"), mdx(\"p\", null, \"It was initially created as a Nextflow port of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nanoporetech/sockeye\"\n  }, \"Sockeye\"), \".\"), mdx(\"h2\", {\n    \"id\": \"introduction\"\n  }, \"Introduction\"), mdx(\"p\", null, \"The following single-cell kits from 10x Genomics are currently supported:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chromium Single Cell \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium3.html\"\n  }, \"3\\u02B9 gene expression\"), \", versions 2 and 3\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chromium Single Cell \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium5.html\"\n  }, \"5\\u02B9 gene expression\"), \", version 1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chromium Single Cell \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium_multiome.html\"\n  }, \"Multiome (ATAC + GEX)\"), \", version 1\")), mdx(\"p\", null, \"Oxford Nanopore has developed a protocol for sequencing single-cell libraries from 10x, which can be found on the Nanopore Community \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://community.nanoporetech.com/docs/prepare/library_prep_protocols/single-cell-transcriptomics-10x/v/sst_v9148_v111_revb_12jan2022\"\n  }, \"website\"), \".\"), mdx(\"p\", null, \"The inputs to Sockeye are raw nanopore reads (FASTQ) generated from the sequencing\\ninstrument and reference files that can be downloaded from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://support.10xgenomics.com/single-cell-gene-expression/software/downloads/latest\"\n  }, \"10x\"), \".\\nThe pipeline output a gene x cell, and transcript x cell expression matrices, as well as a BAM file of\\naligned reads tagged with cell barcode and UMI information.\"), mdx(\"h2\", {\n    \"id\": \"package-dependencies\"\n  }, \"Package dependencies\"), mdx(\"p\", null, \"The wf-single-cell pipeline makes use of the following dependencies.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bedtools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bioframe\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"biopython\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"editdistance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"matplotlib\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"minimap2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"numpy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pandas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"parasail-python\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pysam\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"samtools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"scikit-learn\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"seqkit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tqdm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"umap-learn\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vsearch\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stringtie\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gffcomapare\")), mdx(\"p\", null, \"Additionally, while no explicit dependency exists for the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/CGATOxford/UMI-tools\"\n  }, \"UMI-tools\"), \" package, the script\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bin/cluster_umis.py\"), \" makes significant use of several functions from\\nthe package. More detailed acknowledgements can be found in the source code.\"), mdx(\"h2\", {\n    \"id\": \"quickstart\"\n  }, \"Quickstart\"), mdx(\"p\", null, \"The workflow uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nextflow.io/\"\n  }, \"nextflow\"), \" to manage compute and\\nsoftware resources, as such nextflow will need to be installed before attempting\\nto run the workflow.\"), mdx(\"p\", null, \"The workflow can currently be run using either\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.docker.com/products/docker-desktop\"\n  }, \"Docker\"), \" or\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.conda.io/en/latest/miniconda.html\"\n  }, \"conda\"), \" to provide isolation of\\nthe required software. Both methods are automated out-of-the-box provided\\neither docker or conda is installed.\"), mdx(\"p\", null, \"It is not required to clone or download the git repository in order to run the workflow.\\nFor more information on running EPI2ME Labs workflows \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://labs.epi2me.io/wfindex\"\n  }, \"visit out website\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Workflow options\")), mdx(\"p\", null, \"To obtain the workflow, having installed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nextflow\"), \", users can run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"nextflow run epi2me-labs/wf-single-cell --help\\n\")), mdx(\"p\", null, \"to see the options for the workflow.\"), mdx(\"p\", null, \"The main options are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fastq\"), \": A fastq file or directory containing fastq input files or directories of input files.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ref_genome_dir\"), \" The path to the 10x reference genome directory (see \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Downloading reference data\"), \" below)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"single_cell_sample_sheet\"), \"\\n(\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"not to be confused with the optional MinKNOW \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"sample_sheet\")), \")\")), mdx(\"p\", null, \"The single_cell_sample_sheet contains details about the input sample_ids, the 10X kits used (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3prime\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"5prime\"), \"), the kit versions used (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"v2\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"v3\"), \" for the 3\\u2019 kit, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"v1\"), \" for the 5\\u2019 kit), a rough estimate of the number of cells in the library. The cell count estimate specified with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exp_cells\"), \" and can be a very rough estimate (500 is a robust default value if the number is not known).\"), mdx(\"p\", null, \"The sample_id field should correspond to sample_id which is defined either in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sample_sheet\"), \",  given by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sample\"), \" parameter (for single sample runs). If no \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sample_sheet\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sample\"), \" is given, sample_id is derived from each folder containing the fastq files or if a single file is given, the sample_id is the basename of the file (data.fastq.gz -> data).\"), mdx(\"p\", null, \"An example sheet with one sample is:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sample_id,kit_name,kit_version,exp_cells\\nsample_10,3prime,v3,500\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Downloading reference data\"), \"\\nThe pipeline requires access to reference data files that are packaged and freely available from 10x Genomics. For human samples, the GRCh38 packaged reference files can be downloaded using either curl or wget using:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl -O https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz\\ntar -xvf refdata-gex-GRCh38-2020-A.tar.gz\\n\")), mdx(\"p\", null, \"or \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"wget https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz\\ntar -xvf refdata-gex-GRCh38-2020-A.tar.gz\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Download demonstration data\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"A small dataset is provided for the purposes of testing the workflow\\nIt consits of data from just 10 cells and the 10x reference data for only chr22.\\nIt can be downloaded using:\\n\\nwget -O test_data.tar.gz  \\\\\\n   https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-single-cell/wf-single-cell-testdata.tar.gz \\\\\\n  && tar -xzvf test_data.tar.gz\\n\")), mdx(\"p\", null, \"The workflow can be run with the demonstration data using:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"OUTPUT=output\\nnextflow run epi2me-labs/wf-single-cell \\\\\\n    -w ${OUTPUT}/workspace \\\\\\n    -profile standard \\\\\\n    --fastq test_data/fastq/ \\\\\\n    --single_cell_sample_sheet test_data/samples.test.csv \\\\\\n    --ref_genome_dir test_data/refdata-gex-GRCh38-2020-A \\\\\\n    --matrix_min_genes 1 \\\\\\n    --matrix_min_cells 1 \\\\\\n    --matrix_max_mito 100 \\\\\\n    --out_dir ${OUTPUT}\\n\")), mdx(\"p\", null, \"The output of the pipeline will be found in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./output\"), \" for the above\\nexample. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Workflow outputs\")), mdx(\"p\", null, \"The pipeline output will be written to a directory defined by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--out_dir\"), \".\\nFor each sample specifed in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"single_cell-sample_sheet\"), \"  an output folder is created containing the results.\"), mdx(\"p\", null, \"The most useful outputs of the pipeline are likely:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"configs.stats.json\"), \": provides a summary of sequencing statistics and observed read configurations, such as\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n_reads\"), \": number of total reads in the input fastq(s)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rl_mean\"), \": mean read length\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n_fl\"), \": total number of reads with the read1\\u2014>TSO or TSO\\u2019\\u2014>read1\\u2019 adapter configuration (i.e. full-length reads)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n_plus\"), \": number of reads with the read1\\u2014>TSO configuration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n_minus\"), \": number of reads with the TSO\\u2019\\u2014>read1\\u2019 configuration\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tagged.sorted.bam\"), \": BAM file of alignments to the reference where each alignment contains the following sequence tags\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CB: corrected cell barcode sequence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CR: uncorrected cell barcode sequence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CY: Phred quality scores of the uncorrected cell barcode sequence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UB: corrected UMI sequence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UR: uncorrected UMI sequence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UY: Phred quality scores of the uncorrected UMI sequence\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gene_expression.processed.tsv\"), \":  TSV containing the gene (rows) x cell (columns) expression matrix, processed and normalized according to: \"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"matrix_min_genes\"), \": cells with fewer than this number of expressed genes will be removed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"matrix_min_cells\"), \": genes present in fewer than this number of cells will be removed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"matrix_max_mito\"), \": cells with more than this percentage of counts belonging to mitochondrial genes will be removed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"matrix_norm_count\"), \": normalize all cells to this number of total counts per cell\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"processed_transcript_matrix.tsv\"), \": TSV containing the transcript (rows) x cell (columns) expression matrix in transcript per million (TPM):\\nThese expression values are determined by applying \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ccb.jhu.edu/software/stringtie/\"\n  }, \"stringtie\"), \" and\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ccb.jhu.edu/software/stringtie/gffcompare.shtml\"\n  }, \"gffcompare\"), \" to reads with the same barcodes (each cell).\\nThe assembled transcripts with the following gffcompare class codes\\nare excluded: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"i\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"s\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"u\"), \".\\nSee the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ccb.jhu.edu/software/stringtie/gffcompare.shtml\"\n  }, \"gffcompare\"), \"\\nand \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ccb.jhu.edu/software/stringtie/gffcompare_codes.png\"\n  }, \"this image\"), \", and\\nonly cells and genes that pass the gene filtering described above are included.## Useful links\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nextflow.io/\"\n  }, \"nextflow\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.docker.com/products/docker-desktop\"\n  }, \"docker\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.conda.io/en/latest/miniconda.html\"\n  }, \"conda\")))));\n}\n;\nMDXContent.isMDXComponent = true;","keywords":["epi2melabs","nanopore sequencing"],"tags":null,"thumbnail":null},"categoryPosts":{"nodes":[{"id":"216fadf7-baa2-51b7-9ea7-152178eb9b07","title":"ONT Open Datasets","slug":"/dataindex/","link":null,"excerpt":"The Oxford Nanopore Technologies Open Data (ont-open-data) provides reference sequencing data fromâ€¦","timeToRead":1,"featured":true,"thumbnailText":null,"date":"September 01, 2020","category":null,"author":null,"thumbnail":{"__typename":"ImageSharp","ImageSharp_vertical":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/d625388ba09b90e0b9b8a67a5e80bdb7/144fe/thumbnail.jpg","srcSet":"/static/d625388ba09b90e0b9b8a67a5e80bdb7/9d7b9/thumbnail.jpg 190w,\n/static/d625388ba09b90e0b9b8a67a5e80bdb7/144fe/thumbnail.jpg 380w","sizes":"(min-width: 380px) 380px, 100vw"},"sources":[{"srcSet":"/static/d625388ba09b90e0b9b8a67a5e80bdb7/228d6/thumbnail.webp 190w,\n/static/d625388ba09b90e0b9b8a67a5e80bdb7/6b99c/thumbnail.webp 380w","type":"image/webp","sizes":"(min-width: 380px) 380px, 100vw"}]},"width":380,"height":290},"ImageSharp_hero":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/d625388ba09b90e0b9b8a67a5e80bdb7/5e493/thumbnail.jpg","srcSet":"/static/d625388ba09b90e0b9b8a67a5e80bdb7/696c0/thumbnail.jpg 800w,\n/static/d625388ba09b90e0b9b8a67a5e80bdb7/5e493/thumbnail.jpg 1600w","sizes":"(min-width: 1600px) 1600px, 100vw"},"sources":[{"srcSet":"/static/d625388ba09b90e0b9b8a67a5e80bdb7/c9f06/thumbnail.webp 800w,\n/static/d625388ba09b90e0b9b8a67a5e80bdb7/f47df/thumbnail.webp 1600w","type":"image/webp","sizes":"(min-width: 1600px) 1600px, 100vw"}]},"width":1600,"height":650}}},{"id":"6f31a1e3-72f1-505e-92c2-16ce7081fb5b","title":"EPI2ME Labs Tutorials","slug":"/nbindex/","link":null,"excerpt":"EPI2ME Labs extends the JupyterLab notebook framework with a pre-configured\nanalysis environmentâ€¦","timeToRead":2,"featured":true,"thumbnailText":null,"date":"September 01, 2020","category":null,"author":null,"thumbnail":{"__typename":"ImageSharp","ImageSharp_vertical":{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/static/d5f2779e5a84bf92e5d939ed7cc9b20e/144fe/thumbnail.jpg","srcSet":"/static/d5f2779e5a84bf92e5d939ed7cc9b20e/9d7b9/thumbnail.jpg 190w,\n/static/d5f2779e5a84bf92e5d939ed7cc9b20e/144fe/thumbnail.jpg 380w","sizes":"(min-width: 380px) 380px, 100vw"},"sources":[{"srcSet":"/static/d5f2779e5a84bf92e5d939ed7cc9b20e/228d6/thumbnail.webp 190w,\n/static/d5f2779e5a84bf92e5d939ed7cc9b20e/6b99c/thumbnail.webp 380w","type":"image/webp","sizes":"(min-width: 380px) 380px, 100vw"}]},"width":380,"height":290},"ImageSharp_hero":{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/static/d5f2779e5a84bf92e5d939ed7cc9b20e/5e493/thumbnail.jpg","srcSet":"/static/d5f2779e5a84bf92e5d939ed7cc9b20e/696c0/thumbnail.jpg 800w,\n/static/d5f2779e5a84bf92e5d939ed7cc9b20e/5e493/thumbnail.jpg 1600w","sizes":"(min-width: 1600px) 1600px, 100vw"},"sources":[{"srcSet":"/static/d5f2779e5a84bf92e5d939ed7cc9b20e/c9f06/thumbnail.webp 800w,\n/static/d5f2779e5a84bf92e5d939ed7cc9b20e/f47df/thumbnail.webp 1600w","type":"image/webp","sizes":"(min-width: 1600px) 1600px, 100vw"}]},"width":1600,"height":650}}},{"id":"f3c2ac29-f91a-5e1c-bfec-51a0f25385bd","title":"EPI2ME Labs Workflows","slug":"/wfindex/","link":null,"excerpt":"EPI2ME Labs maintains a collection of  Nextflow  bioinformatics\nworkflows tailored to Oxfordâ€¦","timeToRead":2,"featured":true,"thumbnailText":null,"date":"September 01, 2020","category":null,"author":null,"thumbnail":{"__typename":"ImageSharp","ImageSharp_vertical":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/7b955fd3bff78ff21f10b5769a188346/144fe/thumbnail.jpg","srcSet":"/static/7b955fd3bff78ff21f10b5769a188346/9d7b9/thumbnail.jpg 190w,\n/static/7b955fd3bff78ff21f10b5769a188346/144fe/thumbnail.jpg 380w","sizes":"(min-width: 380px) 380px, 100vw"},"sources":[{"srcSet":"/static/7b955fd3bff78ff21f10b5769a188346/228d6/thumbnail.webp 190w,\n/static/7b955fd3bff78ff21f10b5769a188346/6b99c/thumbnail.webp 380w","type":"image/webp","sizes":"(min-width: 380px) 380px, 100vw"}]},"width":380,"height":290},"ImageSharp_hero":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/7b955fd3bff78ff21f10b5769a188346/5e493/thumbnail.jpg","srcSet":"/static/7b955fd3bff78ff21f10b5769a188346/696c0/thumbnail.jpg 800w,\n/static/7b955fd3bff78ff21f10b5769a188346/5e493/thumbnail.jpg 1600w","sizes":"(min-width: 1600px) 1600px, 100vw"},"sources":[{"srcSet":"/static/7b955fd3bff78ff21f10b5769a188346/c9f06/thumbnail.webp 800w,\n/static/7b955fd3bff78ff21f10b5769a188346/f47df/thumbnail.webp 1600w","type":"image/webp","sizes":"(min-width: 1600px) 1600px, 100vw"}]},"width":1600,"height":650}}}]},"previous":{"id":"f11bb16c-9690-5e01-a3e6-a3168fa4405b","slug":"/workflows/wf-tb-amr/","title":"wf-tb-amr documentation"},"next":{"id":"bf83d30d-cd0f-5a6f-997b-dd4a51069c3c","slug":"/workflows/wf-mpx/","title":"wf-mpx documentation"}},"pageContext":{"id":"28118e51-5629-5ea9-81d8-264e44542ab1","categoryId":null,"tagsIds":[],"hasTags":false,"previousId":"f11bb16c-9690-5e01-a3e6-a3168fa4405b","nextId":"bf83d30d-cd0f-5a6f-997b-dd4a51069c3c","paginatePostsPage":true,"basePath":"/","services":{"algolia":true,"mailchimp":false,"disqus":false,"graphComment":false,"facebookComment":false},"siteUrl":"https://labs.epi2me.io","mobileMenu":{"title":"Topics","items":[{"name":"Announcements","slug":"/category/announcements/"},{"name":"Articles","slug":"/category/articles/"},{"name":"Data Releases","slug":"/category/data-releases/"},{"name":"How Tos","slug":"/category/how-tos/"},{"name":"Software Releases","slug":"/category/software-releases/"}]},"darkMode":true,"includeExcerpt":true,"includeTimeToRead":true,"includeTableOfContents":true,"imageQuality":75}},
    "staticQueryHashes": ["1992822086","2409295108","2893703372","3667468360"]}