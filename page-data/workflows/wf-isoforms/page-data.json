{
    "componentChunkName": "component---packages-blog-gatsby-blog-core-src-templates-post-js",
    "path": "/workflows/wf-isoforms/",
    "result": {"data":{"post":{"id":"bbdae063-08d5-59a8-af9b-e6f4d7518bd8","title":"wf-isoforms documentation","slug":"/workflows/wf-isoforms/","link":null,"excerpt":"wf-isoforms This repository contains a  nextflow  workflow\nfor assembly and annotation ofâ€¦","tableOfContents":{"items":[{"url":"#wf-isoforms","title":"wf-isoforms","items":[{"url":"#introduction","title":"Introduction"},{"url":"#useful-links","title":"Useful links"}]}]},"timeToRead":2,"featured":null,"protected":null,"thumbnailText":null,"date":null,"category":{"id":"459fb2d2-ade7-5185-b798-d73cf3ba64ad","name":"Workflows","slug":"/category/workflows/","color":"#5fB8B1","icon":"/static/2efab3418b4dcadf8ae92d4b8d750afa/workflows.svg"},"author":{"id":"3e0d0c4a-8281-553c-bcc3-a8a72c3dff0b","name":"EPI2ME Labs","slug":"/author/epi2me-labs/","title":"Senior Button Pusher","description":"I'm a robot. I like to publish JupyterLab tutorials, Nextflow workflows, and blog posts.","skills":["Continuous Deployment"],"social":[{"name":"Twitter","url":"https://twitter.com/nanopore"},{"name":"Website","url":"https://labs.epi2me.io"}],"thumbnail":{"__typename":"ImageSharp","ImageSharp_small":{"layout":"fixed","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='150'%20height='150'%20viewBox='0%200%20150%20150'%20preserveAspectRatio='none'%3e%3cpath%20d='M64%202C42%207%2030%2036%2044%2048c7%206%2013%207%2031%207%2015%200%2017%200%2022-2%2011-4%2015-9%2015-19%200-23-24-39-48-32m3%205c-14%204-24%2016-23%2028%201%2010%2010%2014%2031%2014%2026%200%2035-7%2029-23-4-14-22-23-37-19M52%2023c-3%202%203%208%208%208%204%200%209-4%209-6%200-3-3-4-6-2s-3%202-6%201c-2-2-4-2-5-1m31%200c-2%201-1%204%202%206%205%203%209%203%2013-1%205-4%201-8-5-4h-4c-3-2-5-2-6-1M34%2059c-2%201-1%208%201%2021%206%2036%2017%2060%2031%2067%2021%2011%2041-16%2049-67%202-14%203-21%201-21-1-1-4%200-8%201a233%20233%200%2001-74-1m7%2015c6%2045%2022%2074%2037%2069%2015-4%2025-28%2032-75%201-2%201-2-3-2-17%203-47%203-64%200h-4l2%208'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/c489ff6e3b007deccb15ccbd6b76ce51/a7a66/epi2melabs.png","srcSet":"/static/c489ff6e3b007deccb15ccbd6b76ce51/a7a66/epi2melabs.png 48w,\n/static/c489ff6e3b007deccb15ccbd6b76ce51/416a0/epi2melabs.png 96w","sizes":"48px"},"sources":[{"srcSet":"/static/c489ff6e3b007deccb15ccbd6b76ce51/a3542/epi2melabs.webp 48w,\n/static/c489ff6e3b007deccb15ccbd6b76ce51/0f66d/epi2melabs.webp 96w","type":"image/webp","sizes":"48px"}]},"width":48,"height":48},"ImageSharp_regular":{"layout":"fixed","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='150'%20height='150'%20viewBox='0%200%20150%20150'%20preserveAspectRatio='none'%3e%3cpath%20d='M64%202C42%207%2030%2036%2044%2048c7%206%2013%207%2031%207%2015%200%2017%200%2022-2%2011-4%2015-9%2015-19%200-23-24-39-48-32m3%205c-14%204-24%2016-23%2028%201%2010%2010%2014%2031%2014%2026%200%2035-7%2029-23-4-14-22-23-37-19M52%2023c-3%202%203%208%208%208%204%200%209-4%209-6%200-3-3-4-6-2s-3%202-6%201c-2-2-4-2-5-1m31%200c-2%201-1%204%202%206%205%203%209%203%2013-1%205-4%201-8-5-4h-4c-3-2-5-2-6-1M34%2059c-2%201-1%208%201%2021%206%2036%2017%2060%2031%2067%2021%2011%2041-16%2049-67%202-14%203-21%201-21-1-1-4%200-8%201a233%20233%200%2001-74-1m7%2015c6%2045%2022%2074%2037%2069%2015-4%2025-28%2032-75%201-2%201-2-3-2-17%203-47%203-64%200h-4l2%208'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/c489ff6e3b007deccb15ccbd6b76ce51/46e60/epi2melabs.png","srcSet":"/static/c489ff6e3b007deccb15ccbd6b76ce51/46e60/epi2melabs.png 150w,\n/static/c489ff6e3b007deccb15ccbd6b76ce51/d612b/epi2melabs.png 300w","sizes":"150px"},"sources":[{"srcSet":"/static/c489ff6e3b007deccb15ccbd6b76ce51/ae23d/epi2melabs.webp 150w,\n/static/c489ff6e3b007deccb15ccbd6b76ce51/bd37b/epi2melabs.webp 300w","type":"image/webp","sizes":"150px"}]},"width":150,"height":150}}},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"wf-isoforms documentation\",\n  \"slug\": \"workflows/wf-isoforms\",\n  \"author\": \"EPI2ME Labs\",\n  \"private\": true,\n  \"category\": \"Workflows\",\n  \"keywords\": [\"epi2melabs\", \"nanopore sequencing\", \"isoforms\"],\n  \"description\": \"Documentation for the wf-isoforms workflow.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wf-isoforms\"\n  }, \"wf-isoforms\"), mdx(\"p\", null, \"This repository contains a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nextflow.io/\"\n  }, \"nextflow\"), \" workflow\\nfor assembly and annotation of transcripts from Oxford Nanopore cDNA or direct RNA reads.\\nIt has been adapted from two existing Snakemake pipelines:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nanoporetech/pipeline-nanopore-ref-isoforms\"\n  }, \"https://github.com/nanoporetech/pipeline-nanopore-ref-isoforms\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nanoporetech/pipeline-nanopore-denovo-isoforms\"\n  }, \"https://github.com/nanoporetech/pipeline-nanopore-denovo-isoforms\"))), mdx(\"h2\", {\n    \"id\": \"introduction\"\n  }, \"Introduction\"), mdx(\"p\", null, \"This workflow identifies RNA isoforms using either cDNA or direct RNA (dRNA)\\nOxford Nanopore reads.\"), mdx(\"h3\", {\n    \"id\": \"preprocesing\"\n  }, \"Preprocesing\"), mdx(\"p\", null, \"cDNA reads are initially preprocessed by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nanoporetech/pychopper\"\n  }, \"pychopper\"), \"\\nfor the identification of full-length reads, as well as trimming and orientation correction (This step is omitted for\\ndirect RNA reads).\"), mdx(\"h3\", {\n    \"id\": \"reference-aided-approach\"\n  }, \"Reference-aided approach\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Full length reads are mapped to a supplied reference genome using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/lh3/minimap2\"\n  }, \"minimap2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transcripts are assembled by \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://ccb.jhu.edu/software/stringtie\"\n  }, \"stringtie\"), \"\\nin long read mode (with or without a guide reference annotation) to generate the GFF annotation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The annotation generated by the pipeline is compared to the reference annotation.\\nusing \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://ccb.jhu.edu/software/stringtie/gffcompare.shtml\"\n  }, \"gffcompare\"))), mdx(\"h3\", {\n    \"id\": \"de-novo-based-approach-experimental\"\n  }, \"de novo-based approach (experimental!)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sequence clusters are generated using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nanoporetech/isONclust2\"\n  }, \"isONclust2\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If a reference genome is supplied, cluster quality metrics are determined by comparing\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"with clusters generated from a minimap2 alignment.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A consensus sequence for each cluster is generated using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rvaser/spoa\"\n  }, \"spoa\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Three rounds of polishing using racon and minimap2 to give a final polished CDS for each gene.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Full-length reads are then mapped to these polished CDS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transcripts are assembled by stringtie as for the reference-based approach.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Note\"), \": This approach is currently not supported with direct RNA reads.\")), mdx(\"h3\", {\n    \"id\": \"workflow-inputs\"\n  }, \"Workflow inputs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Directory containing cDNA/direct RNA reads. Or a directory containing subdirectories each with reads from different samples\\n(in fastq/fastq.gz format)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reference genome in fasta format (required for reference-based assembly).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optional reference annotation in GFF2/3 format.## Quickstart\")), mdx(\"p\", null, \"The workflow uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nextflow.io/\"\n  }, \"nextflow\"), \" to manage compute and\\nsoftware resources, as such nextflow will need to be installed before attempting\\nto run the workflow.\"), mdx(\"p\", null, \"The workflow can currently be run using either\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.docker.com/products/docker-desktop\"\n  }, \"Docker\"), \",\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://sylabs.io/singularity/\"\n  }, \"Singularity\"), \" or\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.conda.io/en/latest/miniconda.html\"\n  }, \"conda\"), \" to provide isolation of\\nthe required software. Each method is automated out-of-the-box provided\\neither docker, singularity or conda is installed.\"), mdx(\"p\", null, \"It is not required to clone or download the git repository in order to run the workflow.\\nFor more information on running EPI2ME Labs workflows \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://labs.epi2me.io/wfindex\"\n  }, \"visit out website\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Workflow options\")), mdx(\"p\", null, \"To obtain the workflow, having installed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nextflow\"), \", users can run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"nextflow run epi2me-labs/wf-isoforms --help\\n\")), mdx(\"p\", null, \"to see the options for the workflow.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example execution of a workflow for reference-based transcript assembly\")), mdx(\"p\", null, \"This example uses a synthetic SIRV dataset, so we need to tell minimap2 about the non-canonical splice junctions with\\n\\u2014minimap2_opts \\u2018-uf \\u2014splice-flank=no\\u2019\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"OUTPUT=~/output;\\nnextflow run wf-isoforms/ --fastq test_data/fastq  --ref_genome test_data/SIRV_150601a.fasta --ref_annotation test_data/SIRV_isofroms.gtf\\n--minimap2_opts '-uf --splice-flank=no' --out_dir outdir -w workspace_dir -profile conda -resume\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# To evaluate the workflow on a larger Drosophila dataset\\n./evaluation/run_evaluation_dmel.sh outdir\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example workflow for denovo transcript assembly\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"OUTPUT=~/output\\nnextflow run . --fastq test_data/fastq --denovo --ref_genome test_data/SIRV_150601a.fasta  -profile local --out_dir ${OUTPUT} -w ${OUTPUT}/workspace \\\\\\n--sample sample_id -resume\\n\")), mdx(\"p\", null, \"A full list of options can be seen in nextflow_schema.json. Below are some commonly used ones.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Threshold for including isoforms into interactive table \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"transcript_table_cov_thresh = 50\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run the denovo pipeline \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"denovo = true\"), \" (default false)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To run the workflow with direct RNA reads \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--direct_rna\"), \" (skips the pychopper step).\")), mdx(\"p\", null, \"Pychopper and minimap2 can take options via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"minimap2_opts\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pychopper_opts\"), \", for example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When using the SIRV synthetic test data  \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"minimap2_opts = '-uf --splice-flank=no'\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pychopper needs to know which cDNA synthesis kit used\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQK-PCS109: use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pychopper_opts = '-k PCS109'\"), \" (default)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQK-PCS110: use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pychopper_opts = '-k PCS110'\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pychopper can use one of two available backends for identifying primers in the raw reads\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nhmmscan \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pychopper opts = '-m phmm'\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"edlib \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pychopper opts = '-m edlib'\"))))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": edlib is set by default in the config as it\\u2019s quite a lot faster. However it may be less sensitive than nhmmscan. \"), mdx(\"h2\", {\n    \"id\": \"useful-links\"\n  }, \"Useful links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.nextflow.io/\"\n  }, \"nextflow\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.docker.com/products/docker-desktop\"\n  }, \"docker\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sylabs.io/singularity/\"\n  }, \"Singularity\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.conda.io/en/latest/miniconda.html\"\n  }, \"conda\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/isovic/racon\"\n  }, \"racon\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/rvaser/spoa\"\n  }, \"spoa\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ksahlin/isONclust\"\n  }, \"inONclust\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nanoporetech/isONclust2\"\n  }, \"isONclust2\"))));\n}\n;\nMDXContent.isMDXComponent = true;","keywords":["epi2melabs","nanopore sequencing","isoforms"],"tags":null,"thumbnail":null},"categoryPosts":{"nodes":[]},"previous":{"id":"3fd2d79d-c7f7-5ffe-8f26-9be6b4022dcd","slug":"/workflows/wf-metagenomics/","title":"wf-metagenomics documentation"},"next":{"id":"a84c2651-9028-580c-bae8-1742cfac1426","slug":"/workflows/wf-human-sv/","title":"wf-human-sv documentation"}},"pageContext":{"id":"bbdae063-08d5-59a8-af9b-e6f4d7518bd8","categoryId":"459fb2d2-ade7-5185-b798-d73cf3ba64ad","tagsIds":[],"hasTags":false,"previousId":"3fd2d79d-c7f7-5ffe-8f26-9be6b4022dcd","nextId":"a84c2651-9028-580c-bae8-1742cfac1426","paginatePostsPage":true,"basePath":"/","services":{"algolia":true,"mailchimp":false,"disqus":false,"graphComment":false,"facebookComment":false},"siteUrl":"https://labs.epi2me.io","mobileMenu":{"title":"Topics","items":[{"name":"Announcements","slug":"/category/announcements/"},{"name":"Articles","slug":"/category/articles/"},{"name":"Data Releases","slug":"/category/data-releases/"},{"name":"How Tos","slug":"/category/how-tos/"},{"name":"Software Releases","slug":"/category/software-releases/"},{"name":"Workflows","slug":"/category/workflows/"}]},"darkMode":true,"includeExcerpt":true,"includeTimeToRead":true,"includeTableOfContents":true,"imageQuality":75}},
    "staticQueryHashes": ["1992822086","2409295108","2893703372","3667468360"]}